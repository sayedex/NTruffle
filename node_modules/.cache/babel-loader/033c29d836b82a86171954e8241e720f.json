{"ast":null,"code":"var _jsxFileName = \"/home/sa/Desktop/Sayed/Sayed/src/Com/Staking.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Web3ReactProvider } from '@web3-react/core';\nimport { useWeb3React } from \"@web3-react/core\";\nimport { injected } from \"./img/Connnector\";\nimport Web3 from 'web3';\nimport BigNumber from \"bignumber.js\";\nimport { Typography, Button, TextField, Grid, CircularProgress, Alert } from '@mui/material';\nimport Stakingabi from \"./Stakingabi.json\";\nimport CakeTokenabi from \"./CakeToken.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Staking = () => {\n  _s();\n\n  const [stakingamout, setstakingamout] = useState();\n  const [CakeCon, setCakeCon] = useState();\n  const [Stakingmainpool, setStakingmainpool] = useState();\n  const [user, ssetuser] = useState();\n  const [earn, setearn] = useState(\"..\");\n  const [test, settestt] = useState(false);\n  const [stakedd, setstakedd] = useState(\"..\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [aprrove, setapproved] = useState(\"aprrove\");\n  const [stakeover, setstakeover] = useState(false);\n  const [refr, setrefr] = useState(0);\n\n  const re = () => {\n    setrefr(11);\n  };\n\n  useEffect(() => {\n    loadWeb3();\n    loadBlockchainData(); //esl\n  }, [refr]);\n\n  const loadWeb3 = async () => {\n    if (window.ethereum) {\n      await window.ethereum.enable();\n    } else {\n      window.alert(\"Non-Ethereum browser detected. You should consider trying MetaMask!\");\n    }\n  };\n\n  const loadBlockchainData = async () => {\n    // setLoading(true);\n    if (typeof window.ethereum == \"undefined\") {\n      return;\n    }\n\n    const web3 = new Web3(window.ethereum);\n    let url = window.location.href;\n    const StakingContract = new web3.eth.Contract(Stakingabi.abi, \"0x0dC913bC7E653005A4fDbD317E7EdF2b7366878B\");\n    setStakingmainpool(StakingContract);\n    const CaketokenCon = new web3.eth.Contract(CakeTokenabi.abi, \"0x16c189981660f8bf84c54c12351f0ba342b9ffc0\");\n    setCakeCon(CaketokenCon);\n    const accounts = await web3.eth.getAccounts();\n    ssetuser(accounts[0]); //reward Earning \n    //  const balanceofuser = await hello.methods.balanceOf(accounts[0]).call();\n\n    const Totalstaked = await StakingContract.methods.Totalstakes(accounts[0]).call();\n    const TotalEarnedTOGW = await web3.utils.fromWei(Totalstaked, 'ether');\n    setstakedd(TotalEarnedTOGW);\n    console.log(Totalstaked);\n    const balanceofreward = await StakingContract.methods.earned(accounts[0]).call();\n    const TotalEarned = await web3.utils.fromWei(balanceofreward, 'ether');\n    console.log(TotalEarned);\n    setearn(TotalEarned); // setearn(Totalearning);  //reward Earning  \n    // const Tokensalecontact = new web3.eth.Contract(Tokensale.abi,\"0x9bD3FfF95ecd4DA1ba93679f87c9DEBc6b5fD534\")\n    //  let totalsupplyS = await hello.methods.totalSupply().call();\n    //  const totalsupply = await web3.utils.fromWei(totalsupplyS,'ether')\n    //Token price facthing \n    // if (accounts.length == 0) {\n    //   return;\n    // }\n    // setAccount(accounts[0]);\n    // const networkId = await web3.eth.net.getId();\n    ///user balance factching \n    // const balanceofuser = await hello.methods.balanceOf(accounts[0]).call();\n    // const totalsold = await Newtokensale.methods.totalsold().call();\n    // const Tokenprice = await Tokensalecontact.methods.tokenprice().call();\n    // const Realtokenprice = await web3.utils.fromWei(Tokenprice,'ether')\n    // const totalsoldtotal = await web3.utils.fromWei(totalsold,'ether')\n    // settotalsolda(totalsoldtotal)\n    // const balanceofuserinwei = await web3.utils.fromWei(balanceofuser,'ether')\n    // setbalanceofuser(balanceofuserinwei);};\n  }; ////new \n\n\n  const change = e => {\n    setstakingamout(e.target.value);\n  };\n\n  const approve = async s => {\n    setLoading(true);\n    setErrorMessage(\"\");\n    setSuccessMessage(\"\");\n    s.preventDefault();\n    setLoading(true);\n    const web3 = new Web3(window.ethereum);\n    const Amount = await web3.utils.toWei(stakingamout);\n\n    try {\n      const result = await CakeCon.methods.approve(\"0x0dC913bC7E653005A4fDbD317E7EdF2b7366878B\", Amount).send({\n        from: user.toString()\n      }).on(\"transactionHash\", hash => {\n        setapproved(\"Approved\");\n        setstakeover(true);\n        setSuccessMessage(\"Hey,You are done!! \");\n      });\n    } catch {\n      setErrorMessage(\"Opps Try Again Plz!!\"); // setstakeover(false)\n    }\n\n    setLoading(false);\n  };\n\n  const Send = async e => {\n    e.preventDefault();\n    const web3 = new Web3(window.ethereum);\n    const Amount = await web3.utils.toWei(stakingamout);\n    e.preventDefault();\n    await Stakingmainpool.methods.stake(Amount).send({\n      from: user.toString()\n    }).on(\"transactionHash\", hash => {\n      window.alert(\"sucess\");\n      re();\n      console.log(hash);\n    }).on(\"error\", () => {\n      window.alert(\"plz Try Again \");\n    }); // setstakingamout(\"\")\n  };\n\n  const withdrawaasa = async e => {\n    e.preventDefault();\n    const web3 = new Web3(window.ethereum);\n    const Amount = await web3.utils.toWei(stakingamout);\n    await Stakingmainpool.methods.withdraw(Amount).send({\n      from: user.toString()\n    }).once(\"recepient\", recepient => {\n      window.alert(\"WOW! withdraw Done\");\n      window.location.reload();\n    }).on(\"error\", () => {\n      window.alert(\"plz Try Again \");\n    });\n    ; // await newtokensale.methods.buyTokens(newamountofethinwei).send({from:userdeta.toString() })\n    //      .once(\"recepient\", (recepient) => {\n    //       window.alert(\"sucess\");\n    //       window.location.reload();\n    //     })\n    //     .on(\"error\", () => {\n    //      window.alert(\"error \")\n    //      });\n    //   }\n  }; //new\n\n\n  const Emergencry = async e => {\n    e.preventDefault();\n    const web3 = new Web3(window.ethereum);\n    await Stakingmainpool.methods.getReward().send({\n      from: user.toString()\n    }).once(\"recepient\", recepient => {\n      window.alert(\"withdraw Done\");\n      window.location.reload();\n    }).on(\"error\", () => {\n      window.alert(\"plz Try Again \");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Connet with \", user]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Your Reward : \", earn]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Total Stake : \", stakedd]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: change,\n        value: stakingamout,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: approve,\n        disabled: loading,\n        className: stakeover ? \"hide_\" : \"show\",\n        children: successMessage ? \"Approved!\" : loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 25\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 128\n        }, this) : \"Approve\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 181\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: Send,\n        className: stakeover ? \"show\" : \"hide_\",\n        children: \"Stake Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 80\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", successMessage && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"success\",\n          children: successMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 24\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: withdrawaasa,\n        children: \"withdraw\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 49\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: Emergencry,\n        children: \"Get Reward\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n};\n\n_s(Staking, \"zzLASZr7AJHSAnFp6j8erRZVIS4=\");\n\n_c = Staking;\nexport default Staking; // const web3 = new Web3(window.ethereum);\n// const amountofethinwei = await web3.utils.toWei(a.toString())\n// await presalecontractinstance\n// .methods\n// .buyTokens()\n// .send({from:account , value : amountofethinwei })\n//   .once(\"recepient\", (recepient) => {\n//    window.alert(\"sucess\")\n//   })\n//   .on(\"error\", () => {\n//     window.alert(\"error \")\n//   })\n// CakeCon.methods.approve(\"0x4311F1bBd707a53823D0a7ed488507694C0A226C\",Amount).send({from:user.toString()}).on('transactionHash',(hash)=>{\n//   hash?\n//    Stakingmainpool.methods.stake(Amount).send({from:user.toString()}).on(\"transactionHash\",(hash)=>{\n//     window.alert(\"sucess\");\n//   }):\n//   window.alert(\"Failed\");\n\nvar _c;\n\n$RefreshReg$(_c, \"Staking\");","map":{"version":3,"sources":["/home/sa/Desktop/Sayed/Sayed/src/Com/Staking.jsx"],"names":["React","useEffect","useState","Web3ReactProvider","useWeb3React","injected","Web3","BigNumber","Typography","Button","TextField","Grid","CircularProgress","Alert","Stakingabi","CakeTokenabi","Staking","stakingamout","setstakingamout","CakeCon","setCakeCon","Stakingmainpool","setStakingmainpool","user","ssetuser","earn","setearn","test","settestt","stakedd","setstakedd","errorMessage","setErrorMessage","successMessage","setSuccessMessage","loading","setLoading","aprrove","setapproved","stakeover","setstakeover","refr","setrefr","re","loadWeb3","loadBlockchainData","window","ethereum","enable","alert","web3","url","location","href","StakingContract","eth","Contract","abi","CaketokenCon","accounts","getAccounts","Totalstaked","methods","Totalstakes","call","TotalEarnedTOGW","utils","fromWei","console","log","balanceofreward","earned","TotalEarned","change","e","target","value","approve","s","preventDefault","Amount","toWei","result","send","from","toString","on","hash","Send","stake","withdrawaasa","withdraw","once","recepient","reload","Emergencry","getReward"],"mappings":"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","sourcesContent":["import React,{useEffect,useState} from \"react\"\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { useWeb3React } from \"@web3-react/core\"\nimport { injected } from \"./img/Connnector\"\nimport Web3 from 'web3'\nimport BigNumber from \"bignumber.js\";\nimport { Typography, Button, TextField, Grid, CircularProgress, Alert } from '@mui/material'\n\n\nimport Stakingabi from \"./Stakingabi.json\"\nimport CakeTokenabi from \"./CakeToken.json\"\nconst Staking = ()=>{\nconst [stakingamout,setstakingamout] = useState();\nconst [CakeCon,setCakeCon] = useState();\nconst [Stakingmainpool,setStakingmainpool] = useState();\nconst [user,ssetuser] = useState();\nconst [earn,setearn] = useState(\"..\")\nconst [test,settestt] = useState(false);\nconst [stakedd,setstakedd] = useState(\"..\");\nconst [errorMessage, setErrorMessage] = useState(\"\");\nconst [successMessage, setSuccessMessage] = useState(\"\");\nconst [loading, setLoading] = useState(false);\nconst [aprrove,setapproved] = useState(\"aprrove\");\nconst [stakeover,setstakeover] = useState(false);\nconst [refr,setrefr] = useState(0);\nconst re = ()=>{\n  setrefr(11);\n}\nuseEffect(() => {\n  loadWeb3()   \n  loadBlockchainData();\n\n//esl\n}, [refr]);\n\n\n\n  const loadWeb3 = async () => {\n    if (window.ethereum) {\n      await window.ethereum.enable()\n    } else {\n      window.alert(\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n      );\n    }\n  };\n  const loadBlockchainData = async () => {\n    // setLoading(true);\n    if (\n      typeof window.ethereum == \"undefined\" \n    ) {\n      return;\n    }\n    const web3 = new Web3(window.ethereum);\n    let url = window.location.href;\n    const StakingContract = new web3.eth.Contract(Stakingabi.abi,\"0x0dC913bC7E653005A4fDbD317E7EdF2b7366878B\");\n    setStakingmainpool(StakingContract);\n    const CaketokenCon = new web3.eth.Contract(CakeTokenabi.abi,\"0x16c189981660f8bf84c54c12351f0ba342b9ffc0\");\n    setCakeCon(CaketokenCon);\n    const accounts = await web3.eth.getAccounts();\n     ssetuser(accounts[0]);\n\n\n\n     //reward Earning \n    //  const balanceofuser = await hello.methods.balanceOf(accounts[0]).call();\n    const Totalstaked = await StakingContract.methods.Totalstakes(accounts[0]).call();\n    const TotalEarnedTOGW = await web3.utils.fromWei(Totalstaked,'ether');\n    setstakedd(TotalEarnedTOGW);\n    console.log(Totalstaked);\n    const balanceofreward = await StakingContract.methods.earned(accounts[0]).call();\n    const TotalEarned = await web3.utils.fromWei(balanceofreward,'ether')\n    console.log(TotalEarned);\n    setearn(TotalEarned)\n    // setearn(Totalearning);  //reward Earning  \n\n    // const Tokensalecontact = new web3.eth.Contract(Tokensale.abi,\"0x9bD3FfF95ecd4DA1ba93679f87c9DEBc6b5fD534\")\n    //  let totalsupplyS = await hello.methods.totalSupply().call();\n    //  const totalsupply = await web3.utils.fromWei(totalsupplyS,'ether')\n\n\n        //Token price facthing \n\n    // if (accounts.length == 0) {\n    //   return;\n    // }\n    // setAccount(accounts[0]);\n    // const networkId = await web3.eth.net.getId();\n///user balance factching \n\n// const balanceofuser = await hello.methods.balanceOf(accounts[0]).call();\n// const totalsold = await Newtokensale.methods.totalsold().call();\n// const Tokenprice = await Tokensalecontact.methods.tokenprice().call();\n// const Realtokenprice = await web3.utils.fromWei(Tokenprice,'ether')\n// const totalsoldtotal = await web3.utils.fromWei(totalsold,'ether')\n// settotalsolda(totalsoldtotal)\n// const balanceofuserinwei = await web3.utils.fromWei(balanceofuser,'ether')\n// setbalanceofuser(balanceofuserinwei);};\n  }\n\n\n\n////new \n\nconst change =(e)=>{\n    setstakingamout(e.target.value);\n\n};\nconst approve = async(s)=>{    \n  setLoading(true);\n  setErrorMessage(\"\");\n  setSuccessMessage(\"\");\n  s.preventDefault();\n  setLoading(true);\n  const web3 = new Web3(window.ethereum);\n  const Amount = await web3.utils.toWei(stakingamout);\n\n  try{\n    const result = await CakeCon.methods.approve(\"0x0dC913bC7E653005A4fDbD317E7EdF2b7366878B\",Amount).\n  send({from:user.toString()}).on(\"transactionHash\", (hash) => {\n    setapproved(\"Approved\");\n    setstakeover(true)\n  setSuccessMessage(\"Hey,You are done!! \");\n})}catch{\n  setErrorMessage(\"Opps Try Again Plz!!\");\n  // setstakeover(false)\n\n}\nsetLoading(false);\n}\n\nconst Send = async (e)=>{\n\n    e.preventDefault();\n    const web3 = new Web3(window.ethereum);\n    const Amount = await web3.utils.toWei(stakingamout);\n      e.preventDefault();\n     await Stakingmainpool.methods.stake(Amount).send({from:user.toString()}).on(\"transactionHash\",(hash)=>{\n     window.alert(\"sucess\");\n     re();\n      console.log(hash);\n    }).on(\"error\", () => {\n      window.alert(\"plz Try Again \")\n    });\n  \n    // setstakingamout(\"\")\n\n};\nconst withdrawaasa = async (e)=>{\n    e.preventDefault();\n    const web3 = new Web3(window.ethereum);\n    const Amount = await web3.utils.toWei(stakingamout);\n   await Stakingmainpool.methods.withdraw(Amount).send({from:user.toString()}).once(\"recepient\", (recepient) => {\n    window.alert(\"WOW! withdraw Done\");\n    window.location.reload();\n   })\n   .on(\"error\", () => {\n     window.alert(\"plz Try Again \")\n   });;\n// await newtokensale.methods.buyTokens(newamountofethinwei).send({from:userdeta.toString() })\n//      .once(\"recepient\", (recepient) => {\n//       window.alert(\"sucess\");\n//       window.location.reload();\n//     })\n//     .on(\"error\", () => {\n//      window.alert(\"error \")\n//      });\n  \n//   }\n}\n//new\nconst Emergencry = async (e)=>{\n  e.preventDefault();\n const web3 = new Web3(window.ethereum);\n    await Stakingmainpool.methods.getReward().send({from:user.toString()}).once(\"recepient\", (recepient) => {\n        window.alert(\"withdraw Done\");\n        window.location.reload();\n       })\n       .on(\"error\", () => {\n         window.alert(\"plz Try Again \")\n       })\n}\nreturn (\n    <>\n\n<form>\n\n<p>Connet with {user}</p>\n<h1>Your Reward : {earn}</h1>\n<h1>Total Stake : {stakedd}</h1>\n<input type=\"text\" onChange={change} value={stakingamout} required/>\n<br></br>\n<button onClick={approve} disabled={loading} className={stakeover? \"hide_\" :\"show\"}>{successMessage ? \"Approved!\" : (loading ? <CircularProgress size={25} /> : \"Approve\")}</button><br/>\n<button onClick={Send} className={stakeover?\"show\" :\"hide_\"}>Stake Now</button><br/>\n<p> {successMessage && <Alert severity=\"success\">{successMessage}</Alert>}\n    {errorMessage && <Alert severity=\"error\">{errorMessage}</Alert>}</p>\n<button onClick={withdrawaasa}>withdraw</button><br/>\n\n<button onClick={Emergencry}>Get Reward</button>\n</form>\n</>\n)\n\n\n\n\n}\n\nexport default Staking;\n\n\n\n\n\n\n\n\n\n\n// const web3 = new Web3(window.ethereum);\n \n// const amountofethinwei = await web3.utils.toWei(a.toString())\n\n\n// await presalecontractinstance\n// .methods\n// .buyTokens()\n// .send({from:account , value : amountofethinwei })\n//   .once(\"recepient\", (recepient) => {\n//    window.alert(\"sucess\")\n//   })\n//   .on(\"error\", () => {\n//     window.alert(\"error \")\n//   })\n\n\n\n\n\n\n\n\n// CakeCon.methods.approve(\"0x4311F1bBd707a53823D0a7ed488507694C0A226C\",Amount).send({from:user.toString()}).on('transactionHash',(hash)=>{\n//   hash?\n//    Stakingmainpool.methods.stake(Amount).send({from:user.toString()}).on(\"transactionHash\",(hash)=>{\n//     window.alert(\"sucess\");\n\n//   }):\n//   window.alert(\"Failed\");"]},"metadata":{},"sourceType":"module"}