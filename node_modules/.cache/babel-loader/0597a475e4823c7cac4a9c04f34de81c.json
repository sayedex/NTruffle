{"ast":null,"code":"var _jsxFileName = \"/home/sa/Desktop/Sayed/my-app-sayed/src/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Avatar, IconButton } from \"@material-ui/core\";\nimport AdjustIcon from '@mui/icons-material/Adjust';\nimport ChatIcon from '@mui/icons-material/Chat';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport SearchIcon from '@mui/icons-material/Search';\nimport SentimentSatisfiedAltIcon from '@mui/icons-material/SentimentSatisfiedAlt';\nimport MicIcon from '@mui/icons-material/Mic';\nimport SendIcon from '@mui/icons-material/Send';\nimport db from \"./firebaseas\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { useStateValue } from './StateProvider';\nimport firebase from \"firebase\";\nimport { inputAdornmentClasses } from \"@mui/material\";\nimport ScrollableFeed from 'react-scrollable-feed';\nimport audio from \"./button-3.mp3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chat = () => {\n  _s();\n\n  var _sms, _sms$timestamp;\n\n  const chat_body = document.querySelector(\".chat_body\");\n  const [sms, setsms] = useState([]);\n  console.log(sms);\n  const [{\n    user\n  }, dispatch] = useStateValue();\n  const [roomName, setroomname] = useState(\"\");\n  const {\n    roomId\n  } = useParams();\n  const [input, setinput] = useState(\"\");\n  console.log(user);\n  useEffect(() => {\n    if (roomId) {\n      db.collection('rooms').doc(roomId).onSnapshot(snap => setroomname(snap.data().name));\n      db.collection('rooms').doc(roomId).collection('massages').orderBy('timestamp', 'asc').onSnapshot(spanshot => setsms(spanshot.docs.map(doc => doc.data())));\n    }\n  }, [roomId]);\n  const [seed, setseed] = useState(\"\");\n  useEffect(() => {\n    setseed(Math.floor(Math.random() * 5000));\n  }, []);\n\n  const sendmsg = e => {\n    e.preventDefault();\n\n    if (input == \"\") {\n      alert(\"type\");\n    } else {\n      new Audio(audio).play();\n      db.collection('rooms').doc(roomId).collection('massages').add({\n        massages: input,\n        name: user.displayName,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp()\n      });\n      setinput(\"\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Chat_name\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat_header\",\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        src: `https:avatars.dicebear.com/api/human/${seed}.svg`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat_headerinfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: roomName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: new Date((_sms = sms[sms.length - 1]) === null || _sms === void 0 ? void 0 : (_sms$timestamp = _sms.timestamp) === null || _sms$timestamp === void 0 ? void 0 : _sms$timestamp.toDate()).toDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat_headerRight\",\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(AdjustIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(AdjustIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 5\n        }, this), \"    \", /*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(AdjustIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 59\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 47\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat_body\",\n      children: /*#__PURE__*/_jsxDEV(ScrollableFeed, {\n        className: \"off\",\n        children: sms.map(fullsms => {\n          var _fullsms$timestamp;\n\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `chat_sms ${fullsms.name === user.displayName && \"chat_rcv\"}`,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"chat_name_\",\n              children: [\" ~ \", fullsms.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 5\n            }, this), fullsms.massages, /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"timestap_chat\",\n              children: new Date((_fullsms$timestamp = fullsms.timestamp) === null || _fullsms$timestamp === void 0 ? void 0 : _fullsms$timestamp.toDate()).toLocaleTimeString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 1\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 1\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat_futter\",\n      children: [/*#__PURE__*/_jsxDEV(SentimentSatisfiedAltIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          value: input,\n          placeholder: \"Type Your sms\",\n          type: \"text\",\n          onChange: e => {\n            setinput(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendmsg,\n          type: \"submit\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 54\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 1\n  }, this);\n};\n\n_s(Chat, \"bKELVAa9PwYHHF9P5Cdu7T15af0=\", false, function () {\n  return [useStateValue, useParams];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/home/sa/Desktop/Sayed/my-app-sayed/src/Chat.js"],"names":["React","useState","useEffect","Avatar","IconButton","AdjustIcon","ChatIcon","MoreVertIcon","SearchIcon","SentimentSatisfiedAltIcon","MicIcon","SendIcon","db","useParams","Link","useStateValue","firebase","inputAdornmentClasses","ScrollableFeed","audio","Chat","chat_body","document","querySelector","sms","setsms","console","log","user","dispatch","roomName","setroomname","roomId","input","setinput","collection","doc","onSnapshot","snap","data","name","orderBy","spanshot","docs","map","seed","setseed","Math","floor","random","sendmsg","e","preventDefault","alert","Audio","play","add","massages","displayName","timestamp","firestore","FieldValue","serverTimestamp","Date","length","toDate","toDateString","fullsms","toLocaleTimeString","target","value"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from \"react\"\nimport {Avatar,IconButton} from \"@material-ui/core\"\nimport AdjustIcon from '@mui/icons-material/Adjust';\nimport ChatIcon from '@mui/icons-material/Chat';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport SearchIcon from '@mui/icons-material/Search';\nimport SentimentSatisfiedAltIcon from '@mui/icons-material/SentimentSatisfiedAlt';\nimport MicIcon from '@mui/icons-material/Mic';\nimport SendIcon from '@mui/icons-material/Send';\nimport db from \"./firebaseas\"\nimport {useParams,Link} from \"react-router-dom\";\nimport {useStateValue} from './StateProvider'\nimport firebase from \"firebase\"\nimport { inputAdornmentClasses } from \"@mui/material\";\nimport ScrollableFeed from 'react-scrollable-feed'\nimport audio from \"./button-3.mp3\";\n\n\nconst Chat = ()=>{\n    const chat_body = document.querySelector(\".chat_body\");\n    const [sms,setsms] = useState([]);\n    console.log(sms);\n    const [{user},dispatch] = useStateValue();\n    const [roomName,setroomname]= useState(\"\");\n    const {roomId} = useParams();\n    const [input,setinput] = useState(\"\");\nconsole.log(user);\n    useEffect(() => {\nif(roomId){\ndb.collection('rooms')\n.doc(roomId)\n.onSnapshot(\n(snap)=>setroomname(snap.data().name));\n\n\ndb.collection('rooms')\n.doc(roomId)\n.collection('massages')\n.orderBy('timestamp','asc')\n.onSnapshot((spanshot)=>setsms(spanshot.docs.map((doc)=>doc.data())))\n\n}}, [roomId]);\nconst [seed,setseed] = useState(\"\");\nuseEffect(() => {\n    setseed(Math.floor(Math.random()*5000));\n   }, []);\n\n\nconst sendmsg =(e)=>{\n    e.preventDefault();\n\nif(input==\"\"){\n    alert(\"type\")\n}else{\n    new Audio(audio).play();\n    db.collection('rooms').doc(roomId).collection('massages').add({\n    massages:input,\n    name:user.displayName,\n    timestamp:firebase.firestore.FieldValue.serverTimestamp(),\n     });\n    setinput(\"\");\n}\n}\n\nreturn (\n\n<div className=\"Chat_name\">\n<div className=\"chat_header\">\n<Avatar src={`https:avatars.dicebear.com/api/human/${seed}.svg`} />\n<div className=\"chat_headerinfo\">\n\n<h3>{roomName}</h3>\n<p>{new Date(sms[sms.length - 1]?.timestamp?.toDate()).toDateString()}</p>\n\n</div>\n<div className=\"chat_headerRight\">\n    <IconButton><AdjustIcon/></IconButton>\n    <IconButton><AdjustIcon/></IconButton>    <IconButton><AdjustIcon/></IconButton>\n\n\n</div>\n\n</div>\n\n<div className=\"chat_body\">\n{/* <ScrollableFeed className=\"off\" > */}\n    <ScrollableFeed className=\"off\">\n    {\n        \nsms.map((fullsms)=>(\n<p className={`chat_sms ${fullsms.name===user.displayName && \"chat_rcv\"}` }>\n    <span className=\"chat_name_\"> ~ {fullsms.name}</span>\n    {fullsms.massages}\n<div className=\"timestap_chat\">\n{new Date(fullsms.timestamp?.toDate()).toLocaleTimeString()}\n</div>\n</p>\n\n))\n\n    }\n    </ScrollableFeed>\n\n{/* <p className={`chat_sms ${true && \"chat_rcv\"}` }>\n    <span className=\"chat_name_\">Sayed</span>\nHello Guys!!\n<div className=\"timestap_chat\">\n3:00Am\n</div>\n\n</p> */}\n</div>\n\n<div className=\"chat_futter\">\n<SentimentSatisfiedAltIcon/>\n<form>\n<input required value={input} placeholder=\"Type Your sms\" type=\"text\" onChange={(e)=>{setinput(e.target.value)}}></input>\n<button  onClick={sendmsg} type=\"submit\"><IconButton><SendIcon/></IconButton></button>\n\n</form>\n\n\n\n</div>\n</div>\n\n)\n\n\n}\nexport default Chat;"]},"metadata":{},"sourceType":"module"}