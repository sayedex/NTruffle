{"ast":null,"code":"var _jsxFileName = \"/home/sa/Desktop/Sayed/Sayed/src/Com/Test.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Web3ReactProvider } from '@web3-react/core';\nimport { useWeb3React } from \"@web3-react/core\";\nimport { injected } from \"./img/Connnector\";\nimport Abi from \"./Abi.json\";\nimport Web3 from 'web3';\nimport Devtoken from \"./Devtoken.json\";\nimport Tokensale from \"./Tokensale.json\";\nimport Tokensaletow from \"./New.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TestWeb3 = () => {\n  _s();\n\n  const [value, setvalue] = useState();\n  const [newinput, setnewinput] = useState();\n  const [store, sestore] = useState();\n  const [totalsupply, settotalsupply] = useState();\n  const [tokencontract, settokencontact] = useState();\n  const [userdeta, setuserdeta] = useState(\"\");\n  const [balanceofuser, setbalanceofuser] = useState();\n  const [Devtokensale, setDevtokensale] = useState();\n  const [tokenprice, settokenprice] = useState();\n  const [totalsolda, settotalsolda] = useState();\n  const [loding, loging] = useState();\n  const [show, setshow] = useState(true);\n  const [show2, setshow2] = useState(false);\n\n  const change = e => {\n    setvalue(e.target.value);\n  };\n\n  const loadWeb3 = async () => {\n    if (window.ethereum) {\n      await window.ethereum.enable();\n    } else {\n      window.alert(\"Non-Ethereum browser detected. You should consider trying MetaMask!\");\n    }\n  };\n\n  const loadBlockchainData = async () => {\n    // setLoading(true);\n    if (typeof window.ethereum == \"undefined\") {\n      return;\n    }\n\n    const web3 = new Web3(window.ethereum);\n    let url = window.location.href;\n    const accounts = await web3.eth.getAccounts();\n    setuserdeta(accounts);\n    const hello = new web3.eth.Contract(Devtoken.abi, \"0xED5917ff7Da8C6818f93988205e7dBbf3Fbf7D42\");\n    const Tokensalecontact = new web3.eth.Contract(Tokensale.abi, \"0x9bD3FfF95ecd4DA1ba93679f87c9DEBc6b5fD534\");\n    const Newtokensale = new web3.eth.Contract(Tokensaletow.abi, \"\");\n    settokencontact(hello);\n    setDevtokensale(Tokensalecontact);\n    let totalsupplyS = await hello.methods.totalSupply().call();\n    const totalsupply = await web3.utils.fromWei(totalsupplyS, 'ether');\n    settotalsupply(totalsupply); //Token price facthing \n    // if (accounts.length == 0) {\n    //   return;\n    // }\n    // setAccount(accounts[0]);\n    // const networkId = await web3.eth.net.getId();\n    ///user balance factching \n\n    const balanceofuser = await hello.methods.balanceOf(accounts[0]).call();\n    const totalsold = await Tokensalecontact.methods.totalsold().call();\n    const Tokenprice = await Tokensalecontact.methods.tokenprice().call();\n    const Realtokenprice = await web3.utils.fromWei(Tokenprice, 'ether');\n    settokenprice(Realtokenprice / 1000 * 100);\n    const totalsoldtotal = await web3.utils.fromWei(totalsold, 'ether');\n    settotalsolda(totalsoldtotal);\n    const balanceofuserinwei = await web3.utils.fromWei(balanceofuser, 'ether');\n    setbalanceofuser(balanceofuserinwei);\n  };\n\n  const handlechnage = () => {// tokencontract.methods.approve(\"0xe76899F7E3400e276fA8ec99d03C9F0421dE2d9d\", 100000).send({ from: userdeta.toString()})\n  };\n\n  useEffect(() => {\n    loadWeb3();\n    loadBlockchainData(); //esl\n  }, []);\n\n  const changeininputfield = e => {\n    console.log(e.target.value);\n    setvalue(e.target.value);\n  };\n\n  const newchnage = e => {\n    console.log(e.target.value);\n    setnewinput(e.target.value);\n  };\n\n  const SendTrsnsation = async e => {\n    e.preventDefault();\n    const web3 = new Web3(window.ethereum);\n    const amountofethinwei = await web3.utils.toWei(value.toString());\n    tokencontract.methods.approve(\"0xd687bfd48aE675c66294B6ccDD4af570e81fbc5f\", amountofethinwei).send({\n      from: userdeta.toString()\n    });\n    await Devtokensale.methods.buyTokens().send({\n      from: userdeta.toString(),\n      value: amountofethinwei\n    }).once(\"recepient\", recepient => {\n      alert(\"sucess\");\n    }).on(\"error\", () => {\n      window.alert(\"error \");\n    });\n  };\n\n  const Pairchange = e => {\n    console.log(\"work\");\n    setshow2(false);\n    setshow(true);\n  };\n\n  const Pairchange1 = e => {\n    console.log(\"work\");\n    setshow(false);\n    setshow2(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Total supply \", totalsupply, \" Dev Token\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"You have \", balanceofuser, \" Dev token man!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Total Sold \", totalsolda, \" % \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selector\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: Pairchange,\n        children: \" BNB/DEV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"BNBDEV\",\n        onClick: Pairchange1,\n        children: \" BUSD/DEV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: SendTrsnsation,\n      className: show ? \"BNBDAI\" : \"hide\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"\",\n        value: value,\n        onChange: changeininputfield,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 71\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Buy Now*bnb\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: show2 ? \"BNBDAI\" : \"hide\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"\",\n        value: newinput,\n        onChange: newchnage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Buy Now*busd\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TestWeb3, \"LfH1Kjtd2VnMtguNxp9/bDClveY=\");\n\n_c = TestWeb3;\nexport default TestWeb3; // const web3 = new Web3(window.ethereum);\n// const amountofethinwei = await web3.utils.toWei(a.toString())\n// await presalecontractinstance\n// .methods\n// .buyTokens()\n// .send({from:account , value : amountofethinwei })\n//   .once(\"recepient\", (recepient) => {\n//    window.alert(\"sucess\")\n//   })\n//   .on(\"error\", () => {\n//     window.alert(\"error \")\n//   });\n\nvar _c;\n\n$RefreshReg$(_c, \"TestWeb3\");","map":{"version":3,"sources":["/home/sa/Desktop/Sayed/Sayed/src/Com/Test.jsx"],"names":["React","useEffect","useState","Web3ReactProvider","useWeb3React","injected","Abi","Web3","Devtoken","Tokensale","Tokensaletow","TestWeb3","value","setvalue","newinput","setnewinput","store","sestore","totalsupply","settotalsupply","tokencontract","settokencontact","userdeta","setuserdeta","balanceofuser","setbalanceofuser","Devtokensale","setDevtokensale","tokenprice","settokenprice","totalsolda","settotalsolda","loding","loging","show","setshow","show2","setshow2","change","e","target","loadWeb3","window","ethereum","enable","alert","loadBlockchainData","web3","url","location","href","accounts","eth","getAccounts","hello","Contract","abi","Tokensalecontact","Newtokensale","totalsupplyS","methods","totalSupply","call","utils","fromWei","balanceOf","totalsold","Tokenprice","Realtokenprice","totalsoldtotal","balanceofuserinwei","handlechnage","changeininputfield","console","log","newchnage","SendTrsnsation","preventDefault","amountofethinwei","toWei","toString","approve","send","from","buyTokens","once","recepient","on","Pairchange","Pairchange1"],"mappings":"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","sourcesContent":["import React,{useEffect,useState} from \"react\"\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { useWeb3React } from \"@web3-react/core\"\nimport { injected } from \"./img/Connnector\"\nimport Abi from \"./Abi.json\"\nimport Web3 from 'web3'\nimport Devtoken from \"./Devtoken.json\"\nimport Tokensale from \"./Tokensale.json\"\nimport Tokensaletow from \"./New.json\"\nconst TestWeb3 = ()=>{\n  const [value,setvalue] = useState();\n  const [newinput,setnewinput] = useState()\n  const [store,sestore] = useState()\n  const [totalsupply,settotalsupply] = useState()\n  const [tokencontract,settokencontact] =useState()\n  const [userdeta,setuserdeta] = useState(\"\")\n  const [balanceofuser,setbalanceofuser] = useState();\n  const [Devtokensale,setDevtokensale] = useState()\n  const [tokenprice,settokenprice] = useState();\n  const [totalsolda,settotalsolda] = useState();\n  const [loding ,loging] = useState();\n  const [show,setshow] = useState(true);\n  const [show2,setshow2] = useState(false);\n  \n\n   const change = (e)=>{\n    setvalue(e.target.value);\n  }\n\n  const loadWeb3 = async () => {\n    if (window.ethereum) {\n      await window.ethereum.enable();\n    } else {\n      window.alert(\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n      );\n    }\n  };\n  const loadBlockchainData = async () => {\n    // setLoading(true);\n    if (\n      typeof window.ethereum == \"undefined\" \n    ) {\n      return;\n    }\n    const web3 = new Web3(window.ethereum);\n\n    let url = window.location.href;\n  \n    const accounts = await web3.eth.getAccounts();\n    setuserdeta(accounts)\n    const hello = new web3.eth.Contract(Devtoken.abi,\"0xED5917ff7Da8C6818f93988205e7dBbf3Fbf7D42\");\n    const Tokensalecontact = new web3.eth.Contract(Tokensale.abi,\"0x9bD3FfF95ecd4DA1ba93679f87c9DEBc6b5fD534\")\n    const Newtokensale = new web3.eth.Contract(Tokensaletow.abi,\"\")\n    \n    settokencontact(hello)\n    setDevtokensale(Tokensalecontact);\n     let totalsupplyS = await hello.methods.totalSupply().call();\n     const totalsupply = await web3.utils.fromWei(totalsupplyS,'ether')\n     settotalsupply(totalsupply)\n\n\n\n        //Token price facthing \n\n    // if (accounts.length == 0) {\n    //   return;\n    // }\n    // setAccount(accounts[0]);\n    // const networkId = await web3.eth.net.getId();\n///user balance factching \n\nconst balanceofuser = await hello.methods.balanceOf(accounts[0]).call();\nconst totalsold = await Tokensalecontact.methods.totalsold().call();\nconst Tokenprice = await Tokensalecontact.methods.tokenprice().call();\nconst Realtokenprice = await web3.utils.fromWei(Tokenprice,'ether')\nsettokenprice(Realtokenprice/1000*100)\nconst totalsoldtotal = await web3.utils.fromWei(totalsold,'ether')\nsettotalsolda(totalsoldtotal)\nconst balanceofuserinwei = await web3.utils.fromWei(balanceofuser,'ether')\n\nsetbalanceofuser(balanceofuserinwei);};\n\n  const handlechnage = ()=>{\n\n    // tokencontract.methods.approve(\"0xe76899F7E3400e276fA8ec99d03C9F0421dE2d9d\", 100000).send({ from: userdeta.toString()})\n  }\n  useEffect(() => {\n    loadWeb3();\n    loadBlockchainData();\n\n    //esl\n  }, []);\n  const changeininputfield = (e)=>{\n    console.log(e.target.value)\n    setvalue(e.target.value);\n  }\n  const newchnage = (e)=>{\n    console.log(e.target.value)\n    setnewinput(e.target.value);\n  }\nconst SendTrsnsation = async (e)=>{\ne.preventDefault();    const web3 = new Web3(window.ethereum);\nconst amountofethinwei = await web3.utils.toWei(value.toString());\ntokencontract.methods.approve(\"0xd687bfd48aE675c66294B6ccDD4af570e81fbc5f\", amountofethinwei).send({ from: userdeta.toString()})\n await Devtokensale.methods.buyTokens()  .send({from:userdeta.toString() , value : amountofethinwei })\n   .once(\"recepient\", (recepient) => {\n   alert(\"sucess\")\n  })\n  .on(\"error\", () => {\n   window.alert(\"error \")\n   });\n\n}\n\nconst Pairchange =(e)=>{\nconsole.log(\"work\");\nsetshow2(false)\nsetshow(true)\n\n}\nconst Pairchange1 =(e)=>{\n  console.log(\"work\");\n  setshow(false);\n  setshow2(true);\n\n  \n  }\nreturn (\n    <>\n<h1>Total supply {totalsupply} Dev Token</h1>\n<h1>You have {balanceofuser} Dev token man!</h1>\n<h1>Total Sold {totalsolda} % </h1>\n{/* <h1>Token Price : {tokenprice} ETH</h1> */}\n\n\n<div className=\"selector\">\n<div  onClick={Pairchange}> BNB/DEV</div>\n<div className=\"BNBDEV\" onClick={Pairchange1}> BUSD/DEV</div>\n</div>\n\n<form onSubmit={SendTrsnsation}  className={show? \"BNBDAI\" : \"hide\"}>\n\n<input type=\"\"  value={value} onChange={changeininputfield} required/><br/>\n<button type=\"submit\">Buy Now*bnb</button>\n\n\n</form>\n<form className={show2? \"BNBDAI\" : \"hide\"} >\n<input type=\"\" value={newinput} onChange={newchnage}/>\n<br></br>\n<button>Buy Now*busd</button>\n</form>\n\n    </>\n)\n\n\n\n\n}\n\nexport default TestWeb3;\n\n\n\n\n\n\n\n\n\n\n// const web3 = new Web3(window.ethereum);\n \n// const amountofethinwei = await web3.utils.toWei(a.toString())\n\n\n// await presalecontractinstance\n// .methods\n// .buyTokens()\n// .send({from:account , value : amountofethinwei })\n//   .once(\"recepient\", (recepient) => {\n//    window.alert(\"sucess\")\n//   })\n//   .on(\"error\", () => {\n//     window.alert(\"error \")\n//   });"]},"metadata":{},"sourceType":"module"}