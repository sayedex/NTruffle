{"ast":null,"code":"var _jsxFileName = \"/home/sa/Desktop/Sayed/Sayed/src/Com/Test.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Web3ReactProvider } from '@web3-react/core';\nimport { useWeb3React } from \"@web3-react/core\";\nimport { injected } from \"./img/Connnector\";\nimport Abi from \"./Abi.json\";\nimport Web3 from 'web3';\nimport Devtoken from \"./Devtoken.json\";\nimport Tokensale from \"./Tokensale.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TestWeb3 = () => {\n  _s();\n\n  const [value, setvalue] = useState();\n  const [store, sestore] = useState();\n  const [totalsupply, settotalsupply] = useState();\n  const [tokencontract, settokencontact] = useState([]);\n  const [userdeta, setuserdeta] = useState(\"\");\n  const [balanceofuser, setbalanceofuser] = useState();\n  const [Devtokensale, setDevtokensale] = useState();\n  const [tokenprice, settokenprice] = useState();\n\n  const change = e => {\n    setvalue(e.target.value);\n  };\n\n  const Send = e => {\n    e.preventDefault();\n    sestore(value);\n    handlechnage();\n  };\n\n  const loadWeb3 = async () => {\n    if (window.ethereum) {\n      await window.ethereum.enable();\n    } else {\n      window.alert(\"Non-Ethereum browser detected. You should consider trying MetaMask!\");\n    }\n  };\n\n  const loadBlockchainData = async () => {\n    // setLoading(true);\n    if (typeof window.ethereum == \"undefined\") {\n      return;\n    }\n\n    const web3 = new Web3(window.ethereum);\n    let url = window.location.href;\n    const accounts = await web3.eth.getAccounts();\n    setuserdeta(accounts);\n    const hello = new web3.eth.Contract(Devtoken.abi, \"0xED5917ff7Da8C6818f93988205e7dBbf3Fbf7D42\");\n    const Tokensalecontact = new web3.eth.Contract(Tokensale.abi, \"0xd687bfd48aE675c66294B6ccDD4af570e81fbc5f\");\n    settokencontact(hello);\n    setDevtokensale(Tokensalecontact);\n    let totalsupplyS = await hello.methods.totalSupply().call();\n    const totalsupply = await web3.utils.fromWei(totalsupplyS, 'ether');\n    settotalsupply(totalsupply); //Token price facthing \n\n    const Tokenprice = await Devtokensale.methods.tokenprice().call();\n    const RealEthprice = await web3.utils.fromWei(Tokenprice, \"ether\");\n    settokenprice(RealEthprice); // if (accounts.length == 0) {\n    //   return;\n    // }\n    // setAccount(accounts[0]);\n    // const networkId = await web3.eth.net.getId();\n    ///user balance factching \n\n    const balanceofuser = await hello.methods.balanceOf(accounts[0]).call();\n    const balanceofuserinwei = await web3.utils.fromWei(balanceofuser, 'ether');\n    setbalanceofuser(balanceofuserinwei);\n  };\n\n  console.log(userdeta);\n\n  const handlechnage = () => {\n    tokencontract.methods.approve(\"0xe76899F7E3400e276fA8ec99d03C9F0421dE2d9d\", 100000).send({\n      from: userdeta.toString()\n    });\n  };\n\n  useEffect(() => {\n    loadWeb3();\n    loadBlockchainData(); //esl\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      children: [\"Connected\", loadBlockchainData.accounts]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Total supply \", totalsupply, \" Dev Token\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"You have \", balanceofuser, \" Dev token man!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Total Sold \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Token Price : \", tokenprice, \" ETH\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: Send,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: value,\n        onChange: change\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TestWeb3, \"qMJJecrm0TDyaZ0HOs/5j1MRF5E=\");\n\n_c = TestWeb3;\nexport default TestWeb3;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestWeb3\");","map":{"version":3,"sources":["/home/sa/Desktop/Sayed/Sayed/src/Com/Test.jsx"],"names":["React","useEffect","useState","Web3ReactProvider","useWeb3React","injected","Abi","Web3","Devtoken","Tokensale","TestWeb3","value","setvalue","store","sestore","totalsupply","settotalsupply","tokencontract","settokencontact","userdeta","setuserdeta","balanceofuser","setbalanceofuser","Devtokensale","setDevtokensale","tokenprice","settokenprice","change","e","target","Send","preventDefault","handlechnage","loadWeb3","window","ethereum","enable","alert","loadBlockchainData","web3","url","location","href","accounts","eth","getAccounts","hello","Contract","abi","Tokensalecontact","totalsupplyS","methods","totalSupply","call","utils","fromWei","Tokenprice","RealEthprice","balanceOf","balanceofuserinwei","console","log","approve","send","from","toString"],"mappings":"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","sourcesContent":["import React,{useEffect,useState} from \"react\"\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { useWeb3React } from \"@web3-react/core\"\nimport { injected } from \"./img/Connnector\"\nimport Abi from \"./Abi.json\"\nimport Web3 from 'web3'\nimport Devtoken from \"./Devtoken.json\"\nimport Tokensale from \"./Tokensale.json\"\n\nconst TestWeb3 = ()=>{\n  const [value,setvalue] = useState();\n  const [store,sestore] = useState()\n  const [totalsupply,settotalsupply] = useState()\n  const [tokencontract,settokencontact] =useState([])\n  const [userdeta,setuserdeta] = useState(\"\")\n  const [balanceofuser,setbalanceofuser] = useState();\n  const [Devtokensale,setDevtokensale] = useState()\n  const [tokenprice,settokenprice] = useState();\n  const change = (e)=>{\n    setvalue(e.target.value);\n  }\n\n  const Send =(e)=>{\n   e.preventDefault()\n   sestore(value);\n   handlechnage();\n\n  }\n  const loadWeb3 = async () => {\n    if (window.ethereum) {\n      await window.ethereum.enable();\n    } else {\n      window.alert(\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n      );\n    }\n  };\n  const loadBlockchainData = async () => {\n    // setLoading(true);\n    if (\n      typeof window.ethereum == \"undefined\" \n    ) {\n      return;\n    }\n    const web3 = new Web3(window.ethereum);\n\n    let url = window.location.href;\n  \n    const accounts = await web3.eth.getAccounts();\n    setuserdeta(accounts)\n    const hello = new web3.eth.Contract(Devtoken.abi,\"0xED5917ff7Da8C6818f93988205e7dBbf3Fbf7D42\");\n    const Tokensalecontact = new web3.eth.Contract(Tokensale.abi,\"0xd687bfd48aE675c66294B6ccDD4af570e81fbc5f\")\n    settokencontact(hello)\n    setDevtokensale(Tokensalecontact);\n     let totalsupplyS = await hello.methods.totalSupply().call();\n     const totalsupply = await web3.utils.fromWei(totalsupplyS,'ether')\n        settotalsupply(totalsupply)\n\n\n\n        //Token price facthing \nconst Tokenprice = await Devtokensale.methods.tokenprice().call();\nconst RealEthprice = await web3.utils.fromWei(Tokenprice,\"ether\");\nsettokenprice(RealEthprice);\n\n    // if (accounts.length == 0) {\n    //   return;\n    // }\n    // setAccount(accounts[0]);\n    // const networkId = await web3.eth.net.getId();\n///user balance factching \n\nconst balanceofuser = await hello.methods.balanceOf(accounts[0]).call();\n\nconst balanceofuserinwei = await web3.utils.fromWei(balanceofuser,'ether')\nsetbalanceofuser(balanceofuserinwei);\n\n  };\n  console.log(userdeta);\n  const handlechnage = ()=>{\n    tokencontract.methods.approve(\"0xe76899F7E3400e276fA8ec99d03C9F0421dE2d9d\", 100000).send({ from: userdeta.toString()})\n  }\n  useEffect(() => {\n    loadWeb3();\n    loadBlockchainData();\n\n    //esl\n  }, []);\nreturn (\n    <>\n\n    <button>Connected{loadBlockchainData.accounts}</button>\n<h1>Total supply {totalsupply} Dev Token</h1>\n<h1>You have {balanceofuser} Dev token man!</h1>\n<h1>Total Sold </h1>\n<h1>Token Price : {tokenprice} ETH</h1>\n<form onSubmit={Send}>\n\n<input type=\"number\"  value={value} onChange={change}/>\n<button type=\"submit\">Send</button>\n\n\n</form>\n\n\n    </>\n)\n\n\n\n\n}\n\nexport default TestWeb3;"]},"metadata":{},"sourceType":"module"}