{"ast":null,"code":"var _jsxFileName = \"/home/sa/Desktop/Sayed/Sayed/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Test from \"./Com/Tes\";\nimport React, { useEffect, useState } from \"react\";\nimport BigNumber from \"bignumber.js\";\nimport { Typography, Button, TextField, Grid, CircularProgress, Alert } from '@mui/material';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport Web3Modal from \"web3modal\";\nimport Web3 from 'web3';\nimport PoolsA from \"./Com/POOL/PoolsA\"; //header \n\nimport Header from \"./Com/HeaderA\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [wallet, setwallet] = useState(\"Connet wallet\");\n  const providerOptions = {\n    walletconnect: {\n      package: WalletConnectProvider,\n      // required\n      options: {\n        rpc: {\n          56: 'https://bsc-dataseed.binance.org/'\n        },\n        network: 'binance',\n        chainId: 56\n      }\n    }\n  };\n\n  window.onload = () => {\n    localStorage.clear();\n  };\n\n  const web3Modal = new Web3Modal({\n    network: \"binance\",\n    // optional\n    cacheProvider: true,\n    // optional\n    providerOptions,\n    // required,\n    disableInjectedProvider: true\n  });\n\n  const LftingUP = Deta => {};\n\n  useEffect(() => {\n    LoadWeb3();\n  }, []);\n\n  const LoadWeb3 = async () => {\n    const provider = await web3Modal.connect();\n    await provider.enable();\n    const web3 = new Web3(provider);\n    const accounts = await web3.eth.getAccounts();\n    const slice = accounts[0].slice(1, 5) + \"...\" + accounts[0].slice(-3);\n    setwallet(slice);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      wallet: wallet\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(PoolsA, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"/B+DHbmZlIJ3mLAfO/EMhGxuEdQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/sa/Desktop/Sayed/Sayed/src/App.js"],"names":["BrowserRouter","Router","Link","Switch","Route","Test","React","useEffect","useState","BigNumber","Typography","Button","TextField","Grid","CircularProgress","Alert","WalletConnectProvider","Web3Modal","Web3","PoolsA","Header","App","wallet","setwallet","providerOptions","walletconnect","package","options","rpc","network","chainId","window","onload","localStorage","clear","web3Modal","cacheProvider","disableInjectedProvider","LftingUP","Deta","LoadWeb3","provider","connect","enable","web3","accounts","eth","getAccounts","slice"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SACEA,aAAa,IAAIC,MADnB,EAEEC,IAFF,QAGO,kBAHP;AAIA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,SAA7B,EAAwCC,IAAxC,EAA8CC,gBAA9C,EAAgEC,KAAhE,QAA6E,eAA7E;AACA,OAAOC,qBAAP,MAAkC,8BAAlC;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,eAAnB;;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAqBf,QAAQ,CAAC,eAAD,CAAnC;AACA,QAAMgB,eAAe,GAAG;AACtBC,IAAAA,aAAa,EAAE;AACbC,MAAAA,OAAO,EAAEV,qBADI;AACmB;AAChCW,MAAAA,OAAO,EAAE;AACPC,QAAAA,GAAG,EAAE;AACH,cAAI;AADD,SADE;AAIPC,QAAAA,OAAO,EAAE,SAJF;AAKPC,QAAAA,OAAO,EAAE;AALF;AAFI;AADO,GAAxB;;AAaAC,EAAAA,MAAM,CAACC,MAAP,GAAiB,MAAI;AACnBC,IAAAA,YAAY,CAACC,KAAb;AAEC,GAHH;;AAIA,QAAMC,SAAS,GAAG,IAAIlB,SAAJ,CAAc;AAC9BY,IAAAA,OAAO,EAAE,SADqB;AACV;AACpBO,IAAAA,aAAa,EAAE,IAFe;AAET;AACrBZ,IAAAA,eAH8B;AAGb;AACjBa,IAAAA,uBAAuB,EAAE;AAJK,GAAd,CAAlB;;AAMF,QAAMC,QAAQ,GAAIC,IAAD,IAAQ,CAExB,CAFD;;AAGAhC,EAAAA,SAAS,CAAC,MAAM;AACdiC,IAAAA,QAAQ;AACT,GAFQ,EAEN,EAFM,CAAT;;AAGA,QAAMA,QAAQ,GAAI,YAAS;AACzB,UAAMC,QAAQ,GAAG,MAAMN,SAAS,CAACO,OAAV,EAAvB;AACA,UAAMD,QAAQ,CAACE,MAAT,EAAN;AACA,UAAMC,IAAI,GAAG,IAAI1B,IAAJ,CAASuB,QAAT,CAAb;AACA,UAAMI,QAAQ,GAAG,MAAMD,IAAI,CAACE,GAAL,CAASC,WAAT,EAAvB;AACA,UAAMC,KAAK,GAAGH,QAAQ,CAAC,CAAD,CAAR,CAAYG,KAAZ,CAAkB,CAAlB,EAAoB,CAApB,IAAuB,KAAvB,GAA6BH,QAAQ,CAAC,CAAD,CAAR,CAAYG,KAAZ,CAAkB,CAAC,CAAnB,CAA3C;AACAzB,IAAAA,SAAS,CAACyB,KAAD,CAAT;AAAiB,GANnB;;AAOA,sBACA;AAAA,4BACC,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAE1B;AAAhB;AAAA;AAAA;AAAA;AAAA,YADD,eAEA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBADA;AAQC;;GA9CQD,G;;KAAAA,G;AAgDT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport {\n  BrowserRouter as Router,\n  Link\n} from \"react-router-dom\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Test from \"./Com/Tes\"\nimport React,{useEffect,useState} from \"react\"\nimport BigNumber from \"bignumber.js\";\nimport { Typography, Button, TextField, Grid, CircularProgress, Alert } from '@mui/material'\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport Web3Modal from \"web3modal\";\nimport Web3 from 'web3'\nimport PoolsA from \"./Com/POOL/PoolsA\"\n//header \nimport Header from \"./Com/HeaderA\"\nfunction App() {\n  const [wallet,setwallet] = useState(\"Connet wallet\");\n  const providerOptions = {\n    walletconnect: {\n      package: WalletConnectProvider, // required\n      options: {\n        rpc: {\n          56: 'https://bsc-dataseed.binance.org/',\n        },\n        network: 'binance',\n        chainId: 56,\n      },\n  \n    },\n  };\n  window.onload =  ()=>{\n    localStorage.clear();\n\n    }\n  const web3Modal = new Web3Modal({\n    network: \"binance\", // optional\n    cacheProvider: true, // optional\n    providerOptions ,// required,\n    disableInjectedProvider: true,\n  });\nconst LftingUP = (Deta)=>{\n\n}\nuseEffect(() => { \n  LoadWeb3();\n}, []);\nconst LoadWeb3  = async()=>{\n  const provider = await web3Modal.connect();\n  await provider.enable();\n  const web3 = new Web3(provider);\n  const accounts = await web3.eth.getAccounts();\n  const slice = accounts[0].slice(1,5)+\"...\"+accounts[0].slice(-3);\n  setwallet(slice)}\nreturn (\n<>\n <Header wallet={wallet}/> \n<PoolsA/>\n</>\n\n)\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}