{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Web3 from 'web3';\nimport BigNumber from \"bignumber.js\";\nimport { Typography, Button, TextField, Grid, CircularProgress, Alert } from '@mui/material'; //test\n\nimport WalletConnectProvider from \"@walletconnect/web3-provider\"; //token logo\n\nimport tokenlogo from \"./img/favicon.png\";\nimport lock from \"./img/lock.png\"; //staking abi\n\nimport staking from \"./staking.json\";\nimport TRDC from \"./Devtoken.json\"; //0x8e80131810Bb92479AFcf801b20Bbe9fD97A4229\n\nconst Test = () => {\n  _s();\n\n  //this is for walllet\n  //  Create WalletConnect Provider\n  const provider = new WalletConnectProvider({\n    infuraId: \"9d4444960505473c83e7553d15c1786b\",\n    qrcodeModalOptions: {\n      mobileLinks: [\"rainbow\", \"metamask\", \"argent\", \"trust\", \"imtoken\", \"pillar\"]\n    }\n  });\n\n  const all = async () => {\n    const web3 = new Web3(provider); //  Enable session (triggers QR Code modal)\n\n    await provider.enable();\n    const accounts = await web3.eth.getAccounts();\n    console.log(accounts);\n    const StakingContract = new web3.eth.Contract(staking.abi, \"0xa5A48d169B87E1775658e66B3FF8C5A11e4549ab\");\n    console.log(StakingContract);\n    const sayed = await StakingContract.methods.admin().call();\n    console.log(sayed);\n  };\n\n  useEffect(() => {\n    all();\n  }, []);\n  return '';\n};\n\n_s(Test, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["/home/sa/Desktop/Sayed/Sayed/src/Com/Tes.js"],"names":["React","useEffect","useState","Web3","BigNumber","Typography","Button","TextField","Grid","CircularProgress","Alert","WalletConnectProvider","tokenlogo","lock","staking","TRDC","Test","provider","infuraId","qrcodeModalOptions","mobileLinks","all","web3","enable","accounts","eth","getAccounts","console","log","StakingContract","Contract","abi","sayed","methods","admin","call"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,SAA7B,EAAwCC,IAAxC,EAA8CC,gBAA9C,EAAgEC,KAAhE,QAA6E,eAA7E,C,CACA;;AACA,OAAOC,qBAAP,MAAkC,8BAAlC,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,IAAP,MAAiB,gBAAjB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,IAAP,MAAiB,iBAAjB,C,CAEA;;AACA,MAAMC,IAAI,GAAG,MAAI;AAAA;;AACjB;AACA;AACA,QAAMC,QAAQ,GAAG,IAAIN,qBAAJ,CAA0B;AACvCO,IAAAA,QAAQ,EAAE,kCAD6B;AAEvCC,IAAAA,kBAAkB,EAAE;AAClBC,MAAAA,WAAW,EAAE,CACX,SADW,EAEX,UAFW,EAGX,QAHW,EAIX,OAJW,EAKX,SALW,EAMX,QANW;AADK;AAFmB,GAA1B,CAAjB;;AAaA,QAAMC,GAAG,GAAG,YAAS;AAEf,UAAMC,IAAI,GAAG,IAAInB,IAAJ,CAASc,QAAT,CAAb,CAFe,CAInB;;AACA,UAAMA,QAAQ,CAACM,MAAT,EAAN;AACA,UAAMC,QAAQ,GAAG,MAAMF,IAAI,CAACG,GAAL,CAASC,WAAT,EAAvB;AACFC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AAEA,UAAMK,eAAe,GAAG,IAAIP,IAAI,CAACG,GAAL,CAASK,QAAb,CAAsBhB,OAAO,CAACiB,GAA9B,EAAkC,4CAAlC,CAAxB;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYC,eAAZ;AACA,UAAMG,KAAK,GAAG,MAAMH,eAAe,CAACI,OAAhB,CAAwBC,KAAxB,GAAgCC,IAAhC,EAApB;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACC,GAbD;;AAcA/B,EAAAA,SAAS,CAAC,MAAM;AACZoB,IAAAA,GAAG;AAEJ,GAHM,EAGJ,EAHI,CAAT;AAMA,SAEE,EAFF;AAKC,CAzCD;;GAAML,I;;KAAAA,I;AA0CN,eAAeA,IAAf","sourcesContent":["import React,{useEffect,useState} from \"react\"\nimport Web3 from 'web3'\nimport BigNumber from \"bignumber.js\";\nimport { Typography, Button, TextField, Grid, CircularProgress, Alert } from '@mui/material'\n//test\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\n\n//token logo\nimport tokenlogo from \"./img/favicon.png\"\nimport lock from \"./img/lock.png\"\n//staking abi\nimport staking from \"./staking.json\"\nimport TRDC from \"./Devtoken.json\"\n\n//0x8e80131810Bb92479AFcf801b20Bbe9fD97A4229\nconst Test = ()=>{\n//this is for walllet\n//  Create WalletConnect Provider\nconst provider = new WalletConnectProvider({\n    infuraId: \"9d4444960505473c83e7553d15c1786b\",\n    qrcodeModalOptions: {\n      mobileLinks: [\n        \"rainbow\",\n        \"metamask\",\n        \"argent\",\n        \"trust\",\n        \"imtoken\",\n        \"pillar\",\n      ],\n    },\n  });\nconst all = async()=>{\n\n      const web3 = new Web3(provider);\n\n  //  Enable session (triggers QR Code modal)\n  await provider.enable();\n  const accounts = await web3.eth.getAccounts();\nconsole.log(accounts);\n\nconst StakingContract = new web3.eth.Contract(staking.abi,\"0xa5A48d169B87E1775658e66B3FF8C5A11e4549ab\");\nconsole.log(StakingContract);\nconst sayed = await StakingContract.methods.admin().call();\nconsole.log(sayed);\n}\nuseEffect(() => { \n    all();\n  \n  }, [])\n\n\nreturn (\n\n  ''\n)\n\n}\nexport default Test;"]},"metadata":{},"sourceType":"module"}