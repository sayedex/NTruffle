{"ast":null,"code":"var _jsxFileName = \"/home/sa/Desktop/Sayed/sayed12/Sayed/src/App.js\";\nimport './App.css';\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Test from \"./Com/Tes\";\nimport React, { useEffect, useState } from \"react\";\nimport BigNumber from \"bignumber.js\";\nimport { Typography, Button, TextField, Grid, CircularProgress, Alert } from '@mui/material';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport Web3Modal from \"web3modal\";\nimport Web3 from 'web3';\nimport PoolsA from \"./Com/POOL/PoolsA\";\nimport tokenlogo from \"./Com/img/favicon.png\"; //header \n\nimport Header from \"./Com/HeaderA\";\nimport TestAA from \"./Com/Pools2\";\nimport Popup from \"./Com/Popup/Popup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  let web3Modal;\n  const providerOptions = {\n    walletconnect: {\n      package: WalletConnectProvider,\n      // required\n      options: {\n        rpc: {\n          56: 'https://bsc-dataseed.binance.org/',\n          97: 'https://data-seed-prebsc-1-s1.binance.org:8545/'\n        },\n        network: 'binance',\n        chainId: 56\n      }\n    }\n  };\n\n  if (typeof window !== 'undefined') {\n    web3Modal = new Web3Modal({\n      network: \"binance\",\n      // optional\n      // cacheProvider: true, // optional\n      providerOptions,\n      // required,\n      disableInjectedProvider: false\n    });\n  }\n\n  const newTry = async () => {\n    try {\n      const provider1 = await web3Modal.connect();\n      await provider1.enable();\n      setprovider(provider1);\n      setconnet(true);\n      console.log(\"login\"); //   setwholesite(1);\n      //   LoadAlldeta();\n    } catch {\n      return;\n      console.log(\"not connet\");\n    } //   provider.on('accountsChanged', handleAccountsChanged)\n    //   provider.on('disconnect', handleDisconnect)\n    // console.log(\"yes\");\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(TestAA, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/sa/Desktop/Sayed/sayed12/Sayed/src/App.js"],"names":["BrowserRouter","Router","Link","Switch","Route","Test","React","useEffect","useState","BigNumber","Typography","Button","TextField","Grid","CircularProgress","Alert","WalletConnectProvider","Web3Modal","Web3","PoolsA","tokenlogo","Header","TestAA","Popup","App","web3Modal","providerOptions","walletconnect","package","options","rpc","network","chainId","window","disableInjectedProvider","newTry","provider1","connect","enable","setprovider","setconnet","console","log"],"mappings":";AAAA,OAAO,WAAP;AACA,SACEA,aAAa,IAAIC,MADnB,EAEEC,IAFF,QAGO,kBAHP;AAIA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,SAA7B,EAAwCC,IAAxC,EAA8CC,gBAA9C,EAAgEC,KAAhE,QAA6E,eAA7E;AACA,OAAOC,qBAAP,MAAkC,8BAAlC;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,uBAAtB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;;;;AACA,SAASC,GAAT,GAAe;AAIb,MAAIC,SAAJ;AAEA,QAAMC,eAAe,GAAG;AACxBC,IAAAA,aAAa,EAAE;AACbC,MAAAA,OAAO,EAAEZ,qBADI;AACmB;AAChCa,MAAAA,OAAO,EAAE;AACVC,QAAAA,GAAG,EAAE;AACH,cAAI,mCADD;AAEH,cAAG;AAFA,SADK;AAKVC,QAAAA,OAAO,EAAE,SALC;AAMVC,QAAAA,OAAO,EAAE;AANC;AAFI;AADS,GAAxB;;AAiBC,MAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAkC;AAClCR,IAAAA,SAAS,GAAG,IAAIR,SAAJ,CAAc;AAC3Bc,MAAAA,OAAO,EAAE,SADkB;AACP;AACpB;AACAL,MAAAA,eAH2B;AAGV;AACjBQ,MAAAA,uBAAuB,EAAE;AAJE,KAAd,CAAZ;AAMC;;AACH,QAAMC,MAAM,GAAG,YAAS;AACvB,QAAG;AACF,YAAMC,SAAS,GAAG,MAAMX,SAAS,CAACY,OAAV,EAAxB;AACC,YAAMD,SAAS,CAACE,MAAV,EAAN;AACAC,MAAAA,WAAW,CAACH,SAAD,CAAX;AACAI,MAAAA,SAAS,CAAC,IAAD,CAAT;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EALC,CAMH;AACA;AACG,KARH,CAQG,MAAK;AACP;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACE,KAZoB,CAavB;AACA;AACA;;AACE,GAhBH;;AAmCD,sBACA;AAAA,2BACA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADA,mBADA;AAOC;;KAzEQlB,G;AA2ET,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport {\n  BrowserRouter as Router,\n  Link\n} from \"react-router-dom\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Test from \"./Com/Tes\"\nimport React,{useEffect,useState} from \"react\"\nimport BigNumber from \"bignumber.js\";\nimport { Typography, Button, TextField, Grid, CircularProgress, Alert } from '@mui/material'\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport Web3Modal from \"web3modal\";\nimport Web3 from 'web3'\nimport PoolsA from \"./Com/POOL/PoolsA\"\nimport tokenlogo from \"./Com/img/favicon.png\"\n//header \nimport Header from \"./Com/HeaderA\"\nimport TestAA from \"./Com/Pools2\"\nimport Popup from \"./Com/Popup/Popup\"\nfunction App() {\n\n\n\n  let web3Modal;\n\n  const providerOptions = {\n\t\twalletconnect: {\n\t\t  package: WalletConnectProvider, // required\n\t\t  options: {\n\t\t\trpc: {\n\t\t\t  56: 'https://bsc-dataseed.binance.org/',\n\t\t\t  97:'https://data-seed-prebsc-1-s1.binance.org:8545/'\n\t\t\t},\n\t\t\tnetwork: 'binance',\n\t\t\tchainId: 56,\n\t\t  },\n\t  \n\t\t},\n\t  };\n\t \n\t\n\n\t  if (typeof window !== 'undefined'){\n\t  web3Modal = new Web3Modal({\n\t\tnetwork: \"binance\", // optional\n\t\t// cacheProvider: true, // optional\n\t\tproviderOptions ,// required,\n\t\tdisableInjectedProvider: false,\n\t  });\n\t  }  \n\tconst newTry = async()=>{\n\t\ttry{\n\t\t const provider1 = await web3Modal.connect();\n\t\t  await provider1.enable();\n\t\t  setprovider(provider1);\n\t\t  setconnet(true);\n\t\t  console.log(\"login\");\n\t\t//   setwholesite(1);\n\t\t//   LoadAlldeta();\n\t\t  }catch{\n\t\t\treturn;\n\t\t\tconsole.log(\"not connet\");\n\t\t  }\n\t\t//   provider.on('accountsChanged', handleAccountsChanged)\n\t\t//   provider.on('disconnect', handleDisconnect)\n\t\t// console.log(\"yes\");\n\t  }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nreturn (\n<>\n<TestAA />\n</>\n\n)\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}