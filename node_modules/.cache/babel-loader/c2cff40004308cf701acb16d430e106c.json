{"ast":null,"code":"var _jsxFileName = \"/home/sa/Desktop/Sayed/Sayed/src/Com/Test.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Web3ReactProvider } from '@web3-react/core';\nimport { useWeb3React } from \"@web3-react/core\";\nimport { injected } from \"./img/Connnector\";\nimport Abi from \"./Abi.json\";\nimport Web3 from 'web3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TestWeb3 = () => {\n  _s();\n\n  const [value, setvalue] = useState();\n  const [store, sestore] = useState([]);\n  const [totalsupply, settotalsupply] = useState();\n\n  const change = e => {\n    setvalue(e.target.value);\n  };\n\n  const Send = e => {\n    e.preventDefault();\n    sestore(value);\n  };\n\n  const loadWeb3 = async () => {\n    if (window.ethereum) {\n      await window.ethereum.enable();\n    } else {\n      window.alert(\"Non-Ethereum browser detected. You should consider trying MetaMask!\");\n    }\n  };\n\n  const loadBlockchainData = async () => {\n    // setLoading(true);\n    if (typeof window.ethereum == \"undefined\") {\n      return;\n    }\n\n    const web3 = new Web3(window.ethereum);\n    let url = window.location.href;\n    console.log(url);\n    const accounts = await web3.eth.getAccounts();\n    const hello = new web3.eth.Contract(Abi.abi, \"0xbc88542626D985EAC58149b0Eb4F87D6A391b0f4\");\n    let balanceof = await hello.methods.totalSupply().call();\n    console.log(balanceof);\n    settotalsupply(balanceof); // if (accounts.length == 0) {\n    //   return;\n    // }\n    // setAccount(accounts[0]);\n    // const networkId = await web3.eth.net.getId();\n  };\n\n  useEffect(() => {\n    loadWeb3();\n    loadBlockchainData(); //esl\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      children: [\"Connected\", loadBlockchainData.accounts]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: Send,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: value,\n        onChange: change\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TestWeb3, \"HCTt2MpjGuJJHqd+IIbBe7uVjm8=\");\n\n_c = TestWeb3;\nexport default TestWeb3;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestWeb3\");","map":{"version":3,"sources":["/home/sa/Desktop/Sayed/Sayed/src/Com/Test.jsx"],"names":["React","useEffect","useState","Web3ReactProvider","useWeb3React","injected","Abi","Web3","TestWeb3","value","setvalue","store","sestore","totalsupply","settotalsupply","change","e","target","Send","preventDefault","loadWeb3","window","ethereum","enable","alert","loadBlockchainData","web3","url","location","href","console","log","accounts","eth","getAccounts","hello","Contract","abi","balanceof","methods","totalSupply","call"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;;;;AAGA,MAAMC,QAAQ,GAAG,MAAI;AAAA;;AACnB,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBR,QAAQ,EAAjC;AACA,QAAM,CAACS,KAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,WAAD,EAAaC,cAAb,IAA+BZ,QAAQ,EAA7C;;AACA,QAAMa,MAAM,GAAIC,CAAD,IAAK;AAClBN,IAAAA,QAAQ,CAACM,CAAC,CAACC,MAAF,CAASR,KAAV,CAAR;AACD,GAFD;;AAIA,QAAMS,IAAI,GAAGF,CAAD,IAAK;AAChBA,IAAAA,CAAC,CAACG,cAAF;AACAP,IAAAA,OAAO,CAACH,KAAD,CAAP;AAEA,GAJD;;AAKA,QAAMW,QAAQ,GAAG,YAAY;AAC3B,QAAIC,MAAM,CAACC,QAAX,EAAqB;AACnB,YAAMD,MAAM,CAACC,QAAP,CAAgBC,MAAhB,EAAN;AACD,KAFD,MAEO;AACLF,MAAAA,MAAM,CAACG,KAAP,CACE,qEADF;AAGD;AACF,GARD;;AASA,QAAMC,kBAAkB,GAAG,YAAY;AACrC;AACA,QACE,OAAOJ,MAAM,CAACC,QAAd,IAA0B,WAD5B,EAEE;AACA;AACD;;AACD,UAAMI,IAAI,GAAG,IAAInB,IAAJ,CAASc,MAAM,CAACC,QAAhB,CAAb;AAEA,QAAIK,GAAG,GAAGN,MAAM,CAACO,QAAP,CAAgBC,IAA1B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AAEA,UAAMK,QAAQ,GAAG,MAAMN,IAAI,CAACO,GAAL,CAASC,WAAT,EAAvB;AACA,UAAMC,KAAK,GAAG,IAAIT,IAAI,CAACO,GAAL,CAASG,QAAb,CAAsB9B,GAAG,CAAC+B,GAA1B,EAA8B,4CAA9B,CAAd;AACC,QAAIC,SAAS,GAAG,MAAMH,KAAK,CAACI,OAAN,CAAcC,WAAd,GAA4BC,IAA5B,EAAtB;AACGX,IAAAA,OAAO,CAACC,GAAR,CAAYO,SAAZ;AACAxB,IAAAA,cAAc,CAACwB,SAAD,CAAd,CAhBiC,CAiBrC;AACA;AACA;AACA;AACA;AAGD,GAxBD;;AAyBArC,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,QAAQ;AACRK,IAAAA,kBAAkB,GAFJ,CAId;AACD,GALQ,EAKN,EALM,CAAT;AAMF,sBACI;AAAA,4BAEA;AAAA,8BAAkBA,kBAAkB,CAACO,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAIJ;AAAM,MAAA,QAAQ,EAAEd,IAAhB;AAAA,8BAEA;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAsB,QAAA,KAAK,EAAET,KAA7B;AAAoC,QAAA,QAAQ,EAAEM;AAA9C;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJI;AAAA,kBADJ;AAoBC,CAzED;;GAAMP,Q;;KAAAA,Q;AA2EN,eAAeA,QAAf","sourcesContent":["import React,{useEffect,useState} from \"react\"\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { useWeb3React } from \"@web3-react/core\"\nimport { injected } from \"./img/Connnector\"\nimport Abi from \"./Abi.json\"\nimport Web3 from 'web3'\n\n\nconst TestWeb3 = ()=>{\n  const [value,setvalue] = useState();\n  const [store,sestore] = useState([])\n  const [totalsupply,settotalsupply] = useState()\n  const change = (e)=>{\n    setvalue(e.target.value);\n  }\n\n  const Send =(e)=>{\n   e.preventDefault()\n   sestore(value);\n\n  }\n  const loadWeb3 = async () => {\n    if (window.ethereum) {\n      await window.ethereum.enable();\n    } else {\n      window.alert(\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n      );\n    }\n  };\n  const loadBlockchainData = async () => {\n    // setLoading(true);\n    if (\n      typeof window.ethereum == \"undefined\" \n    ) {\n      return;\n    }\n    const web3 = new Web3(window.ethereum);\n\n    let url = window.location.href;\n    console.log(url);\n\n    const accounts = await web3.eth.getAccounts();\n    const hello = new web3.eth.Contract(Abi.abi,\"0xbc88542626D985EAC58149b0Eb4F87D6A391b0f4\");\n     let balanceof = await hello.methods.totalSupply().call();\n        console.log(balanceof);\n        settotalsupply(balanceof)\n    // if (accounts.length == 0) {\n    //   return;\n    // }\n    // setAccount(accounts[0]);\n    // const networkId = await web3.eth.net.getId();\n\n\n  };\n  useEffect(() => {\n    loadWeb3();\n    loadBlockchainData();\n\n    //esl\n  }, []);\nreturn (\n    <>\n\n    <button>Connected{loadBlockchainData.accounts}</button>\n\n<form onSubmit={Send}>\n\n<input type=\"number\"  value={value} onChange={change}/>\n<button type=\"submit\">Send</button>\n\n\n</form>\n\n\n    </>\n)\n\n\n\n\n}\n\nexport default TestWeb3;"]},"metadata":{},"sourceType":"module"}