{"ast":null,"code":"import _regeneratorRuntime from\"/home/sa/Desktop/Sayed/Sayed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/sa/Desktop/Sayed/Sayed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React,{useEffect,useState}from\"react\";import Web3 from'web3';import BigNumber from\"bignumber.js\";import{Typography,Button,TextField,Grid,CircularProgress,Alert}from'@mui/material';//test\nimport WalletConnectProvider from\"@walletconnect/web3-provider\";//token logo\nimport tokenlogo from\"./img/favicon.png\";import lock from\"./img/lock.png\";//staking abi\nimport staking from\"./staking.json\";import TRDC from\"./Devtoken.json\";import Web3Modal from\"web3modal\";//0x8e80131810Bb92479AFcf801b20Bbe9fD97A4229\nvar Test=function Test(){//this is for walllet\n//  Create WalletConnect Provide\nvar provider=new WalletConnectProvider({rpc:{1:\"https://mainnet.mycustomnode.com\",3:\"https://ropsten.mycustomnode.com\",100:\"https://dai.poa.network\"// ...\n}});var Sayed=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var web3,accounts;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return provider.enable();case 2:web3=new Web3(provider);_context.next=5;return web3.eth.getAccounts();case 5:accounts=_context.sent;console.log(accounts);case 7:case\"end\":return _context.stop();}}},_callee);}));return function Sayed(){return _ref.apply(this,arguments);};}();useEffect(function(){Sayed();},[]);return'';};export default Test;","map":{"version":3,"sources":["/home/sa/Desktop/Sayed/Sayed/src/Com/Tes.js"],"names":["React","useEffect","useState","Web3","BigNumber","Typography","Button","TextField","Grid","CircularProgress","Alert","WalletConnectProvider","tokenlogo","lock","staking","TRDC","Web3Modal","Test","provider","rpc","Sayed","enable","web3","eth","getAccounts","accounts","console","log"],"mappings":"mSAAA,MAAOA,CAAAA,KAAP,EAAcC,SAAd,CAAwBC,QAAxB,KAAuC,OAAvC,CACA,MAAOC,CAAAA,IAAP,KAAiB,MAAjB,CACA,MAAOC,CAAAA,SAAP,KAAsB,cAAtB,CACA,OAASC,UAAT,CAAqBC,MAArB,CAA6BC,SAA7B,CAAwCC,IAAxC,CAA8CC,gBAA9C,CAAgEC,KAAhE,KAA6E,eAA7E,CACA;AACA,MAAOC,CAAAA,qBAAP,KAAkC,8BAAlC,CAEA;AACA,MAAOC,CAAAA,SAAP,KAAsB,mBAAtB,CACA,MAAOC,CAAAA,IAAP,KAAiB,gBAAjB,CACA;AACA,MAAOC,CAAAA,OAAP,KAAoB,gBAApB,CACA,MAAOC,CAAAA,IAAP,KAAiB,iBAAjB,CACA,MAAOC,CAAAA,SAAP,KAAsB,WAAtB,CAEA;AACA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAI,CACjB;AACA;AACA,GAAMC,CAAAA,QAAQ,CAAG,GAAIP,CAAAA,qBAAJ,CAA0B,CACzCQ,GAAG,CAAE,CACH,EAAG,kCADA,CAEH,EAAG,kCAFA,CAGH,IAAK,yBACL;AAJG,CADoC,CAA1B,CAAjB,CAQA,GAAMC,CAAAA,KAAK,0FAAG,2KACNF,CAAAA,QAAQ,CAACG,MAAT,EADM,QAENC,IAFM,CAEC,GAAInB,CAAAA,IAAJ,CAASe,QAAT,CAFD,uBAGWI,CAAAA,IAAI,CAACC,GAAL,CAASC,WAAT,EAHX,QAGNC,QAHM,eAIdC,OAAO,CAACC,GAAR,CAAYF,QAAZ,EAJc,sDAAH,kBAALL,CAAAA,KAAK,0CAAX,CAOAnB,SAAS,CAAC,UAAM,CACdmB,KAAK,GAEN,CAHQ,CAGN,EAHM,CAAT,CAKA,MAEE,EAFF,CAKC,CA5BD,CA6BA,cAAeH,CAAAA,IAAf","sourcesContent":["import React,{useEffect,useState} from \"react\"\nimport Web3 from 'web3'\nimport BigNumber from \"bignumber.js\";\nimport { Typography, Button, TextField, Grid, CircularProgress, Alert } from '@mui/material'\n//test\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\n\n//token logo\nimport tokenlogo from \"./img/favicon.png\"\nimport lock from \"./img/lock.png\"\n//staking abi\nimport staking from \"./staking.json\"\nimport TRDC from \"./Devtoken.json\"\nimport Web3Modal from \"web3modal\";\n\n//0x8e80131810Bb92479AFcf801b20Bbe9fD97A4229\nconst Test = ()=>{\n//this is for walllet\n//  Create WalletConnect Provide\nconst provider = new WalletConnectProvider({\n  rpc: {\n    1: \"https://mainnet.mycustomnode.com\",\n    3: \"https://ropsten.mycustomnode.com\",\n    100: \"https://dai.poa.network\",\n    // ...\n  },\n});\nconst Sayed = async()=>{\n  await provider.enable();\n  const web3 = new Web3(provider);\n  const accounts = await web3.eth.getAccounts();\nconsole.log(accounts);\n}\n\nuseEffect(() => { \n  Sayed();\n\n}, [])\n\nreturn (\n\n  ''\n)\n\n}\nexport default Test;"]},"metadata":{},"sourceType":"module"}