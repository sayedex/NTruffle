{"ast":null,"code":"var _jsxFileName = \"/home/sa/Desktop/Sayed/Sayed/src/Com/Test.jsx\";\nimport React from \"react\";\nimport { Web3ReactProvider } from '@web3-react/core';\nimport { useWeb3React } from \"@web3-react/core\";\nimport { injected } from \"./img/Connnector\";\nimport Web3 from 'web3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TestWeb3 = () => {\n  const loadWeb3 = async () => {\n    if (window.ethereum) {\n      await window.ethereum.enable();\n    } else {\n      window.alert(\"Non-Ethereum browser detected. You should consider trying MetaMask!\");\n    }\n  };\n\n  const loadBlockchainData = async () => {\n    setLoading(true);\n\n    if (typeof window.ethereum == \"undefined\") {\n      return;\n    }\n\n    const web3 = new Web3(window.ethereum);\n    let url = window.location.href;\n    console.log(url);\n    const accounts = await web3.eth.getAccounts(); // if (accounts.length == 0) {\n    //   return;\n    // }\n    // setAccount(accounts[0]);\n    // const networkId = await web3.eth.net.getId();\n  };\n\n  loadBlockchainData();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Connected\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_c = TestWeb3;\nexport default TestWeb3;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestWeb3\");","map":{"version":3,"sources":["/home/sa/Desktop/Sayed/Sayed/src/Com/Test.jsx"],"names":["React","Web3ReactProvider","useWeb3React","injected","Web3","TestWeb3","loadWeb3","window","ethereum","enable","alert","loadBlockchainData","setLoading","web3","url","location","href","console","log","accounts","eth","getAccounts"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,IAAP,MAAiB,MAAjB;;;;AAGA,MAAMC,QAAQ,GAAG,MAAI;AACnB,QAAMC,QAAQ,GAAG,YAAY;AAC3B,QAAIC,MAAM,CAACC,QAAX,EAAqB;AACnB,YAAMD,MAAM,CAACC,QAAP,CAAgBC,MAAhB,EAAN;AACD,KAFD,MAEO;AACLF,MAAAA,MAAM,CAACG,KAAP,CACE,qEADF;AAGD;AACF,GARD;;AASA,QAAMC,kBAAkB,GAAG,YAAY;AACrCC,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QACE,OAAOL,MAAM,CAACC,QAAd,IAA0B,WAD5B,EAEE;AACA;AACD;;AACD,UAAMK,IAAI,GAAG,IAAIT,IAAJ,CAASG,MAAM,CAACC,QAAhB,CAAb;AAEA,QAAIM,GAAG,GAAGP,MAAM,CAACQ,QAAP,CAAgBC,IAA1B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AAEA,UAAMK,QAAQ,GAAG,MAAMN,IAAI,CAACO,GAAL,CAASC,WAAT,EAAvB,CAZqC,CAcrC;AACA;AACA;AACA;AACA;AAGD,GArBD;;AAsBAV,EAAAA,kBAAkB;AACpB,sBACI;AAAA,2BAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA,mBADJ;AAWC,CA5CD;;KAAMN,Q;AA8CN,eAAeA,QAAf","sourcesContent":["import React from \"react\"\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { useWeb3React } from \"@web3-react/core\"\nimport { injected } from \"./img/Connnector\"\nimport Web3 from 'web3'\n\n\nconst TestWeb3 = ()=>{\n  const loadWeb3 = async () => {\n    if (window.ethereum) {\n      await window.ethereum.enable();\n    } else {\n      window.alert(\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n      );\n    }\n  };\n  const loadBlockchainData = async () => {\n    setLoading(true);\n    if (\n      typeof window.ethereum == \"undefined\" \n    ) {\n      return;\n    }\n    const web3 = new Web3(window.ethereum);\n\n    let url = window.location.href;\n    console.log(url);\n\n    const accounts = await web3.eth.getAccounts();\n\n    // if (accounts.length == 0) {\n    //   return;\n    // }\n    // setAccount(accounts[0]);\n    // const networkId = await web3.eth.net.getId();\n    \n\n  };\n  loadBlockchainData();\nreturn (\n    <>\n\n    <button>Connected</button>\n\n    </>\n)\n\n\n\n\n}\n\nexport default TestWeb3;"]},"metadata":{},"sourceType":"module"}