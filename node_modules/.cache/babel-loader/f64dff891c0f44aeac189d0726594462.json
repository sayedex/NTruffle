{"ast":null,"code":"var _jsxFileName = \"/home/sa/Desktop/Sayed/Sayed/src/Com/POOL/POOLB.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Web3 from 'web3';\nimport BigNumber from \"bignumber.js\";\nimport { Typography, Button, TextField, Grid, CircularProgress, Alert } from '@mui/material'; //token logo\n\nimport tokenlogo from \"../img/favicon.png\";\nimport lock from \"../img/lock.png\"; //staking abi\n\nimport staking from \"../staking.json\";\nimport TRDC from \"../Devtoken.json\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport Web3Modal from \"web3modal\"; //0x8e80131810Bb92479AFcf801b20Bbe9fD97A4229\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst POOLB = () => {\n  _s();\n\n  //this is for walllet\n  const [isConnected, setIsConnected] = useState();\n  const [wallet, setwallet] = useState(\"Connet wallet\");\n  const [autoref, setautoref] = useState(0);\n  const [currentAccount, setCurrentAccount] = useState(null);\n  const [userinput, setuserinput] = useState(\"\");\n  const [stakingabi, setstakibgabi] = useState();\n  const [trdcabi, settrdcabi] = useState();\n  const [acc, setacc] = useState();\n  const [stakedhow, setstakedhow] = useState(false);\n  const [loading, setloading] = useState(false);\n  const [loadingCL, setloadingCL] = useState(false);\n  const [loadingwithdraw, setloadingwithdraw] = useState(false);\n  const [loadapprove, setloadapprove] = useState();\n  const [afterapproved, setafterapproved] = useState(\"\");\n  const [errroapprove, seterrroapprove] = useState(\"\");\n  const [rewardsend, setrewardsend] = useState(\"\");\n  const [TOTALSTAKED, setTOTALSTAKED] = useState(\"0\"); //total user staked for apy\n\n  const [totalstaked, settotalstaked] = useState(\"\");\n  const [AVAILABLE, setAVAILABLE] = useState(\"--\");\n  const [earn, setearn] = useState(\"--\");\n  const [dynamicref, setdynamicref] = useState(0);\n  const [pageload, setpageload] = useState(false);\n  const [Apy, setApy] = useState(0);\n  const [alreadyApproved, setalreadyApproved] = useState(false);\n  const [stakeload, setstakeload] = useState(false);\n  const [wholesite, setwholesite] = useState(0);\n  let count = 1;\n  useEffect(() => {\n    Loadweb();\n  }, [dynamicref, wholesite]); // i need update the provider when its load on the window.eth chian\n\n  const web3 = new Web3(provider);\n\n  const Loadweb = async () => {\n    //staking abi3sss\n    // 0xa5A48d169B87E1775658e66B3FF8C5A11e4549ab\n    //pools\n    // token\n    // 0x7e8db69dcff9209e486a100e611b0af300c3374e\n    const networkId = await web3.eth.net.getId();\n\n    if (networkId == 56) {\n      setpageload(true);\n      const StakingContract = new web3.eth.Contract(staking.abi, \"0xa5A48d169B87E1775658e66B3FF8C5A11e4549ab\");\n      setstakibgabi(StakingContract); //staking abi\n      //trdc token abi call\n\n      const TRDcContract = new web3.eth.Contract(TRDC.abi, \"0x7e8db69dcff9209e486a100e611b0af300c3374e\");\n      settrdcabi(TRDcContract); //trdc token abi call\n\n      const accounts = await web3.eth.getAccounts();\n      setacc(accounts[0]);\n      const slice = accounts[0].slice(1, 5) + \"...\" + accounts[0].slice(-3);\n      setwallet(slice);\n      const Totalstaked = await StakingContract.methods.Totalstakes(accounts[0]).call();\n      const TotalstakedETH = await web3.utils.fromWei(Totalstaked, 'ether');\n      setTOTALSTAKED(parseInt(TotalstakedETH)); // few things test \n\n      const Permisson = await TRDcContract.methods.allowance(accounts[0], \"0xa5A48d169B87E1775658e66B3FF8C5A11e4549ab\").call();\n\n      if (Permisson == 0) {\n        setalreadyApproved(false);\n      } else {\n        setalreadyApproved(true);\n      } // few things test\n      //how much token user have \n\n\n      const balance = await TRDcContract.methods.balanceOf(accounts[0]).call();\n      const balanceETH = await web3.utils.fromWei(balance, 'ether');\n      setAVAILABLE(parseInt(balanceETH)); //how much earned\n\n      const balanceofreward = await StakingContract.methods.earned(accounts[0]).call();\n      const TotalEarned = await web3.utils.fromWei(balanceofreward, 'ether');\n      setearn(parseInt(TotalEarned)); ///\n      //total user staked for apy\n\n      const Totalfullstake = await StakingContract.methods.Totalfullstake().call();\n      const TotalfullstakeETH = await web3.utils.fromWei(Totalfullstake, 'ether');\n      settotalstaked(TotalfullstakeETH);\n      const finalApy = 4380000 / TotalfullstakeETH * 100;\n      setApy(parseInt(finalApy)); //this if for our apy\n      //total staked by user\n      //days\n      //Totalpool\n\n      setpageload(false);\n    } else {\n      window.alert(\"Pls! Try it on BSC chian!\");\n    } //total user staked for apy\n\n  }; //this is onchnage fun\n\n\n  const Chnagevalue = e => {\n    setuserinput(e.target.value);\n  }; //this is for approve funtion\n\n\n  const approve = async d => {\n    if (wallet == \"Connet wallet\") {\n      setwholesite(count++);\n    }\n\n    d.preventDefault();\n    setloading(true);\n    console.log(\"work\");\n    const solve = 10000000000000;\n    const Amount = 1000;\n\n    try {\n      const result = await trdcabi.methods.approve(\"0xa5A48d169B87E1775658e66B3FF8C5A11e4549ab\", Amount).send({\n        from: acc.toString()\n      }).on(\"transactionHash\", hash => {\n        // setapproved(\"Approved\");\n        // setstakeover(true)\n        // setSuccessMessage(\"Hey,You are done!! \");\n        setstakedhow(true);\n        setafterapproved(\"Approved! Stake Now!\");\n        setalreadyApproved(true);\n      });\n    } catch {\n      seterrroapprove(\"Try again!\");\n    } // setErrorMessage(\"Opps Try Again Plz!!\");\n    // setstakeover(false)\n\n\n    setloading(false);\n  }; // Stake token\n\n\n  const Stake = async d => {\n    d.preventDefault();\n\n    if (userinput == \"\") {\n      window.alert(\"Type amount!\");\n    } else {\n      setstakeload(true);\n      const web3 = new Web3(provider);\n      const Amount = await web3.utils.toWei(userinput);\n      await stakingabi.methods.stake(Amount).send({\n        from: acc.toString()\n      }).on(\"transactionHash\", hash => {\n        window.alert(\"stake Done!\");\n      }).on(\"error\", () => {\n        window.alert(\"try again\");\n        setstakeload(false);\n      });\n      setstakeload(false);\n    }\n\n    setdynamicref(1);\n  }; ///withdraw\n\n\n  const withdrawaasa = async e => {\n    if (wallet == \"Connet wallet\") {\n      setwholesite(count++);\n    }\n\n    setstakedhow(true);\n    e.preventDefault();\n\n    if (userinput == \"\") {\n      window.alert(\"Type amount!\");\n    } else {\n      setloadingwithdraw(true);\n      const web3 = new Web3(provider);\n      const Amount = await web3.utils.toWei(userinput);\n      await stakingabi.methods.withdraw(Amount).send({\n        from: acc.toString()\n      }).once(\"recepient\", recepient => {\n        setrewardsend(\"Send! your reward!\");\n      }).on(\"error\", () => {\n        window.alert(\"plz Try Again \");\n        setloadingwithdraw(false);\n      }); // await newtokensale.methods.buyTokens(newamountofethinwei).send({from:userdeta.toString() })\n      //      .once(\"recepient\", (recepient) => {\n      //       window.alert(\"sucess\");\n      //       window.location.reload();\n      //     })\n      //     .on(\"error\", () => {\n      //      window.alert(\"error \")\n      //      });\n      //   }\n\n      setloadingwithdraw(false);\n      setstakedhow(false);\n      setdynamicref(2);\n    }\n  }; ///cliam Reward \n\n\n  const Emergencry = async e => {\n    if (wallet == \"Connet wallet\") {\n      setwholesite(count++);\n    }\n\n    e.preventDefault();\n    setloadingCL(true);\n    await stakingabi.methods.getReward().send({\n      from: acc.toString()\n    }).once(\"recepient\", recepient => {\n      window.alert(\"withdraw Done\");\n      window.location.reload();\n    }).on(\"error\", () => {\n      window.alert(\"plz Try Again \");\n      setloadingCL(false);\n    });\n    setdynamicref(3);\n    setloadingCL(false);\n  }; // Stake token\n  // console.log(wallet);\n  // console.log(stakingabi);\n  // end\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: pageload ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Pageloader\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 40\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 39\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"staking_main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mystake\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"TRDC-STAKING\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"APY\",\n          children: [Apy, \"% \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"small\",\n            children: \"APR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"totaltoken\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"totalZStaked\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"TOTAL STAKED\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [TOTALSTAKED, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"small\",\n              children: \"TRDC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Howmuchuhave\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"AVAILABLE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [AVAILABLE, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"small\",\n              children: \"TRDC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 16\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input_pair\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: userinput,\n          onChange: Chnagevalue,\n          placeholder: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pair\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"token_logo\",\n            src: tokenlogo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"TRDC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cliam\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Reward_token\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"CLIAMABLE REWARDS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [earn, \" TRDC\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"Get\",\n          onClick: Emergencry,\n          disabled: loadingCL,\n          children: loadingCL ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 25\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 78\n          }, this) : \"Claim\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: rewardsend && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"success\",\n          children: rewardsend\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stake\",\n        id: \"sa\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"test_\",\n          disabled: loading,\n          onClick: approve,\n          id: alreadyApproved ? 'hide' : \"aa\",\n          type: \"submit\",\n          children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 25\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 12\n          }, this) : \"Enable\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          href: \"#\",\n          disabled: loading,\n          className: \"test_\",\n          onClick: Stake,\n          id: alreadyApproved ? 'show' : \"hide\",\n          children: [loading ? \"Enabling..\" : \"     \", stakeload ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 25\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 12\n          }, this) : \"Stake\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Unstake\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: withdrawaasa,\n          children: loadingwithdraw ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 25\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 19\n          }, this) : \"UnStake\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 1\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n};\n\n_s(POOLB, \"3DefhvDiKiXL6YRwaU108rPHl5U=\");\n\n_c = POOLB;\nexport default POOLB;\n\nvar _c;\n\n$RefreshReg$(_c, \"POOLB\");","map":{"version":3,"sources":["/home/sa/Desktop/Sayed/Sayed/src/Com/POOL/POOLB.jsx"],"names":["React","useEffect","useState","Web3","BigNumber","Typography","Button","TextField","Grid","CircularProgress","Alert","tokenlogo","lock","staking","TRDC","WalletConnectProvider","Web3Modal","POOLB","isConnected","setIsConnected","wallet","setwallet","autoref","setautoref","currentAccount","setCurrentAccount","userinput","setuserinput","stakingabi","setstakibgabi","trdcabi","settrdcabi","acc","setacc","stakedhow","setstakedhow","loading","setloading","loadingCL","setloadingCL","loadingwithdraw","setloadingwithdraw","loadapprove","setloadapprove","afterapproved","setafterapproved","errroapprove","seterrroapprove","rewardsend","setrewardsend","TOTALSTAKED","setTOTALSTAKED","totalstaked","settotalstaked","AVAILABLE","setAVAILABLE","earn","setearn","dynamicref","setdynamicref","pageload","setpageload","Apy","setApy","alreadyApproved","setalreadyApproved","stakeload","setstakeload","wholesite","setwholesite","count","Loadweb","web3","provider","networkId","eth","net","getId","StakingContract","Contract","abi","TRDcContract","accounts","getAccounts","slice","Totalstaked","methods","Totalstakes","call","TotalstakedETH","utils","fromWei","parseInt","Permisson","allowance","balance","balanceOf","balanceETH","balanceofreward","earned","TotalEarned","Totalfullstake","TotalfullstakeETH","finalApy","window","alert","Chnagevalue","e","target","value","approve","d","preventDefault","console","log","solve","Amount","result","send","from","toString","on","hash","Stake","toWei","stake","withdrawaasa","withdraw","once","recepient","Emergencry","getReward","location","reload"],"mappings":"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","sourcesContent":["import React,{useEffect,useState} from \"react\"\nimport Web3 from 'web3'\nimport BigNumber from \"bignumber.js\";\nimport { Typography, Button, TextField, Grid, CircularProgress, Alert } from '@mui/material'\n//token logo\nimport tokenlogo from \"../img/favicon.png\"\nimport lock from \"../img/lock.png\"\n//staking abi\nimport staking from \"../staking.json\"\nimport TRDC from \"../Devtoken.json\"\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport Web3Modal from \"web3modal\";\n\n//0x8e80131810Bb92479AFcf801b20Bbe9fD97A4229\nconst POOLB = ()=>{\n//this is for walllet\n\nconst [isConnected, setIsConnected] = useState();\nconst [wallet,setwallet] = useState(\"Connet wallet\");\nconst [autoref,setautoref] = useState(0);\nconst [currentAccount, setCurrentAccount] = useState(null);\nconst [userinput,setuserinput] = useState(\"\");\nconst [stakingabi,setstakibgabi] = useState();\nconst [trdcabi,settrdcabi] = useState();\nconst [acc,setacc ] = useState();\nconst [stakedhow,setstakedhow] = useState(false);\nconst [loading,setloading] = useState(false);\nconst [loadingCL,setloadingCL] = useState(false);\nconst [loadingwithdraw,setloadingwithdraw] = useState(false);\nconst [loadapprove,setloadapprove] = useState();\nconst [afterapproved,setafterapproved] = useState(\"\");\nconst [errroapprove,seterrroapprove] = useState(\"\");\nconst [rewardsend,setrewardsend] = useState(\"\");\nconst [TOTALSTAKED,setTOTALSTAKED] = useState(\"0\");\n//total user staked for apy\nconst [totalstaked,settotalstaked] = useState(\"\");\nconst [AVAILABLE,setAVAILABLE] = useState(\"--\");\nconst [earn,setearn]  = useState(\"--\");\nconst [dynamicref,setdynamicref] = useState(0);\nconst [pageload,setpageload] = useState(false);\nconst [Apy,setApy] = useState(0);\nconst [alreadyApproved,setalreadyApproved] = useState(false);\nconst [stakeload,setstakeload ] = useState(false);\nconst [wholesite,setwholesite] = useState(0);\nlet count=1;\nuseEffect(() => { \n  Loadweb();\n\n}, [dynamicref,wholesite])\n\n// i need update the provider when its load on the window.eth chian\n\n\n  \n\nconst web3 = new Web3(provider);\n\nconst Loadweb = async()=>{\n\n//staking abi3sss\n// 0xa5A48d169B87E1775658e66B3FF8C5A11e4549ab\n//pools\n\n// token\n// 0x7e8db69dcff9209e486a100e611b0af300c3374e\nconst networkId = await web3.eth.net.getId();\nif(networkId == 56){\nsetpageload(true);\nconst StakingContract = new web3.eth.Contract(staking.abi,\"0xa5A48d169B87E1775658e66B3FF8C5A11e4549ab\");\nsetstakibgabi(StakingContract);\n//staking abi\n//trdc token abi call\nconst TRDcContract = new web3.eth.Contract(TRDC.abi,\"0x7e8db69dcff9209e486a100e611b0af300c3374e\");\nsettrdcabi(TRDcContract);\n\n\n//trdc token abi call\nconst accounts = await web3.eth.getAccounts();\nsetacc(accounts[0]);\nconst slice = accounts[0].slice(1,5)+\"...\"+accounts[0].slice(-3);\nsetwallet(slice)\nconst Totalstaked = await StakingContract.methods.Totalstakes(accounts[0]).call();\nconst TotalstakedETH = await web3.utils.fromWei(Totalstaked,'ether');\nsetTOTALSTAKED(parseInt(TotalstakedETH))\n// few things test \nconst Permisson = await TRDcContract.methods.allowance(accounts[0],\"0xa5A48d169B87E1775658e66B3FF8C5A11e4549ab\").call();\nif(Permisson==0){\n  setalreadyApproved(false)\n}else{\n  setalreadyApproved(true)\n}\n// few things test\n//how much token user have \nconst balance = await TRDcContract.methods.balanceOf(accounts[0]).call();\nconst balanceETH = await web3.utils.fromWei(balance,'ether');\nsetAVAILABLE(parseInt(balanceETH))\n//how much earned\nconst balanceofreward = await StakingContract.methods.earned(accounts[0]).call();\nconst TotalEarned = await web3.utils.fromWei(balanceofreward,'ether');\nsetearn(parseInt(TotalEarned));\n\n///\n//total user staked for apy\nconst Totalfullstake = await StakingContract.methods.Totalfullstake().call();\nconst TotalfullstakeETH = await web3.utils.fromWei(Totalfullstake,'ether');\nsettotalstaked(TotalfullstakeETH);\nconst finalApy = (4380000/TotalfullstakeETH)*100;\nsetApy(parseInt(finalApy));\n\n//this if for our apy\n//total staked by user\n\n//days\n\n//Totalpool\n\n\n\n\n setpageload(false);\n\n\n}else{\n  window.alert(\"Pls! Try it on BSC chian!\");\n}\n//total user staked for apy\n}\n//this is onchnage fun\nconst Chnagevalue =(e)=>{\n  setuserinput(e.target.value);\n\n}\n//this is for approve funtion\nconst approve = async (d)=>{\n  if(wallet==\"Connet wallet\"){\n      setwholesite(count++);\n  }\n  d.preventDefault();\n  setloading(true);\nconsole.log(\"work\");\nconst solve = 10000000000000;\nconst Amount = 1000\n\n  try{\n    const result = await trdcabi.methods.approve(\"0xa5A48d169B87E1775658e66B3FF8C5A11e4549ab\",Amount).send({from:acc.toString()}).on(\"transactionHash\", (hash) => {\n    // setapproved(\"Approved\");\n    // setstakeover(true)\n  // setSuccessMessage(\"Hey,You are done!! \");\n  setstakedhow(true);\n  setafterapproved(\"Approved! Stake Now!\");\n  setalreadyApproved(true);\n})}catch{ \n  seterrroapprove(\"Try again!\")\n\n}\n  // setErrorMessage(\"Opps Try Again Plz!!\");\n  // setstakeover(false)\n  setloading(false);\n}\n// Stake token\n\n\nconst Stake = async (d)=>{\n\n  d.preventDefault();\n  if(userinput==\"\"){\n    window.alert(\"Type amount!\");\n    }\n    else{\n      setstakeload(true);\n      const web3 = new Web3(provider);\n      const Amount = await web3.utils.toWei(userinput);\n  await stakingabi.methods.stake(Amount).send({from:acc.toString()}).on(\"transactionHash\",(hash)=>{\n  window.alert(\"stake Done!\");\n\n  }).on(\"error\",()=>{\nwindow.alert(\"try again\")\nsetstakeload(false);\n  }\n\n\n  )\n  setstakeload(false);\n}\nsetdynamicref(1);\n}\n///withdraw\nconst withdrawaasa = async (e)=>{\n  if(wallet==\"Connet wallet\"){\n    setwholesite(count++);\n}\n  setstakedhow(true);\n  e.preventDefault();\n  if(userinput==\"\"){\n    window.alert(\"Type amount!\");\n    }else{\n      setloadingwithdraw(true);\n      const web3 = new Web3(provider);\n      const Amount = await web3.utils.toWei(userinput);\n  await stakingabi.methods.withdraw(Amount).send({from:acc.toString()}).once(\"recepient\", (recepient) => {\n  setrewardsend(\"Send! your reward!\");\n }).on(\"error\", () => {\n   window.alert(\"plz Try Again \");\n   setloadingwithdraw(false);\n\n });\n// await newtokensale.methods.buyTokens(newamountofethinwei).send({from:userdeta.toString() })\n//      .once(\"recepient\", (recepient) => {\n//       window.alert(\"sucess\");\n//       window.location.reload();\n//     })\n//     .on(\"error\", () => {\n//      window.alert(\"error \")\n//      });\n\n//   }\n\nsetloadingwithdraw(false);\nsetstakedhow(false);\nsetdynamicref(2);\n    }\n}\n///cliam Reward \n\n\nconst Emergencry = async (e)=>{\n  if(wallet==\"Connet wallet\"){\n  setwholesite(count++);\n}\n  e.preventDefault();\n  setloadingCL(true);\n    await stakingabi.methods.getReward().send({from:acc.toString()}).once(\"recepient\", (recepient) => {\n        window.alert(\"withdraw Done\");\n        window.location.reload();\n       })\n       .on(\"error\", () => {\n         window.alert(\"plz Try Again \");\n         setloadingCL(false);\n       })\n       setdynamicref(3);\n       setloadingCL(false)\n}\n// Stake token\n// console.log(wallet);\n\n// console.log(stakingabi);\n// end\nreturn (\n\n<>\n\n\n\n{pageload?<div className=\"Pageloader\"><CircularProgress size={40}/></div> :\n<div className=\"staking_main\">\n<div className=\"mystake\">\n<h2>TRDC-STAKING</h2>\n<h2 className=\"APY\">{Apy}% <span className=\"small\">APR</span></h2>\n</div>\n\n<div className=\"totaltoken\">\n\n<div className=\"totalZStaked\">\n<h3>TOTAL STAKED</h3>\n<p>{TOTALSTAKED} <span className=\"small\">TRDC</span></p>\n\n</div>\n<div className=\"Howmuchuhave\">\n<h3>AVAILABLE\n</h3>\n<p>{AVAILABLE} <span className=\"small\">TRDC</span></p>\n\n</div>\n</div>\n<div className=\"input_pair\">\n<input type=\"text\" value={userinput} onChange={Chnagevalue} placeholder=\"Amount\"></input>\n<div className=\"pair\"><img className=\"token_logo\" src={tokenlogo}></img>\n<h3>TRDC</h3>\n</div>\n</div>\n<div className=\"cliam\">\n<div className=\"Reward_token\">\n  <h3>CLIAMABLE REWARDS\n</h3>\n<p>{earn} TRDC</p>\n</div>\n<button className=\"Get\" onClick={Emergencry} disabled={loadingCL}>{loadingCL?<CircularProgress size={25}/>:\"Claim\"}</button>\n</div>\n\n{/* //dynamic deta */}\n\n<div >\n{/* { afterapproved && <Alert  severity=\"success\">{afterapproved}</Alert>} */}\n{rewardsend && <Alert  severity=\"success\">{rewardsend}</Alert>}\n</div>\n{/* //dynamic deta */}\n<div className=\"stake\" id=\"sa\">\n \n{/* {successMessage ? \"Approved!\" : (loading ? <CircularProgress size={25} /> : \"Approve\")} */}\n\n<button  className=\"test_\" disabled={loading} onClick={approve} id={alreadyApproved? 'hide' :\"aa\"} type=\"submit\" >\n  {loading?<CircularProgress size={25}/>:\"Enable\"}\n  {/* <span>Approve</span>\n  <div class=\"wave\"></div> */}\n</button>\n<button href=\"#\" disabled={loading} className=\"test_\" onClick={Stake} id={alreadyApproved? 'show' :\"hide\"}>\n{loading?\"Enabling..\":\"     \"}\n{stakeload?<CircularProgress size={25}/>:\"Stake\"}\n</button>\n\n</div>\n<div className=\"Unstake\">\n\n<button onClick={withdrawaasa}>\n {loadingwithdraw?<CircularProgress size={25}/>:\"UnStake\"}\n\n</button>\n\n</div>\n\n\n</div>\n\n}\n\n\n\n\n\n\n</>\n\n\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n}\nexport default POOLB;\n"]},"metadata":{},"sourceType":"module"}